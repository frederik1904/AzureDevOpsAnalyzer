/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.api;

import org.junit.Ignore;
import org.junit.Test;
import therealflamingo.ado.models.GitImportRequest;

import java.util.List;

/**
 * API tests for ImportRequestsApi
 */
@Ignore
public class ImportRequestsApiTest {

    private final ImportRequestsApi api = new ImportRequestsApi();


    /**
     * Create an import request.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void importRequestsCreateTest() throws Exception {
        String organization = null;
        GitImportRequest body = null;
        String project = null;
        String repositoryId = null;
        String apiVersion = null;
        GitImportRequest response = api.importRequestsCreate(organization, body, project, repositoryId, apiVersion);

        // TODO: test validations
    }

    /**
     * Retrieve a particular import request.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void importRequestsGetTest() throws Exception {
        String organization = null;
        String project = null;
        String repositoryId = null;
        Integer importRequestId = null;
        String apiVersion = null;
        GitImportRequest response = api.importRequestsGet(organization, project, repositoryId, importRequestId, apiVersion);

        // TODO: test validations
    }

    /**
     * Retrieve import requests for a repository.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void importRequestsQueryTest() throws Exception {
        String organization = null;
        String project = null;
        String repositoryId = null;
        String apiVersion = null;
        Boolean includeAbandoned = null;
        List<GitImportRequest> response = api.importRequestsQuery(organization, project, repositoryId, apiVersion, includeAbandoned);

        // TODO: test validations
    }

    /**
     * Retry or abandon a failed import request.  There can only be one active import request associated with a repository. Marking a failed import request abandoned makes it inactive.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void importRequestsUpdateTest() throws Exception {
        String organization = null;
        GitImportRequest body = null;
        String project = null;
        String repositoryId = null;
        Integer importRequestId = null;
        String apiVersion = null;
        GitImportRequest response = api.importRequestsUpdate(organization, body, project, repositoryId, importRequestId, apiVersion);

        // TODO: test validations
    }

}
