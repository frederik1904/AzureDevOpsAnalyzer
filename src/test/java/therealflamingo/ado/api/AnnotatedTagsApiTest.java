/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.api;

import org.junit.Ignore;
import org.junit.Test;
import therealflamingo.ado.models.GitAnnotatedTag;

/**
 * API tests for AnnotatedTagsApi
 */
@Ignore
public class AnnotatedTagsApiTest {

    private final AnnotatedTagsApi api = new AnnotatedTagsApi();


    /**
     * Create an annotated tag.  Repositories have both a name and an identifier. Identifiers are globally unique, but several projects may contain a repository of the same name. You don&#39;t need to include the project if you specify a repository by ID. However, if you specify a repository by name, you must also specify the project (by name or ID).
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void annotatedTagsCreateTest() throws Exception {
        String organization = null;
        GitAnnotatedTag body = null;
        String project = null;
        String repositoryId = null;
        String apiVersion = null;
        GitAnnotatedTag response = api.annotatedTagsCreate(organization, body, project, repositoryId, apiVersion);

        // TODO: test validations
    }

    /**
     * Get an annotated tag.  Repositories have both a name and an identifier. Identifiers are globally unique, but several projects may contain a repository of the same name. You don&#39;t need to include the project if you specify a repository by ID. However, if you specify a repository by name, you must also specify the project (by name or ID).
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void annotatedTagsGetTest() throws Exception {
        String organization = null;
        String project = null;
        String repositoryId = null;
        String objectId = null;
        String apiVersion = null;
        GitAnnotatedTag response = api.annotatedTagsGet(organization, project, repositoryId, objectId, apiVersion);

        // TODO: test validations
    }

}
