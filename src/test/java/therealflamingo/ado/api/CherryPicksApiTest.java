/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.api;

import therealflamingo.ado.models.GitAsyncRefOperationParameters;
import therealflamingo.ado.models.GitCherryPick;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CherryPicksApi
 */
@Ignore
public class CherryPicksApiTest {

    private final CherryPicksApi api = new CherryPicksApi();

    
    /**
     * 
     *
     * Cherry pick a specific commit or commits that are associated to a pull request into a new branch.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void cherryPicksCreateTest() throws Exception {
        String organization = null;
        GitAsyncRefOperationParameters body = null;
        String project = null;
        String repositoryId = null;
        String apiVersion = null;
        GitCherryPick response = api.cherryPicksCreate(organization, body, project, repositoryId, apiVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Retrieve information about a cherry pick operation by cherry pick Id.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void cherryPicksGetCherryPickTest() throws Exception {
        String organization = null;
        String project = null;
        Integer cherryPickId = null;
        String repositoryId = null;
        String apiVersion = null;
        GitCherryPick response = api.cherryPicksGetCherryPick(organization, project, cherryPickId, repositoryId, apiVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Retrieve information about a cherry pick operation for a specific branch. This operation is expensive due to the underlying object structure, so this API only looks at the 1000 most recent cherry pick operations.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void cherryPicksGetCherryPickForRefNameTest() throws Exception {
        String organization = null;
        String project = null;
        String repositoryId = null;
        String refName = null;
        String apiVersion = null;
        GitCherryPick response = api.cherryPicksGetCherryPickForRefName(organization, project, repositoryId, refName, apiVersion);

        // TODO: test validations
    }
    
}
