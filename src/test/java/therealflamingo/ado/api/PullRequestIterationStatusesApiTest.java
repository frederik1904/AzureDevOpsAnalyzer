/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.api;

import org.junit.Ignore;
import org.junit.Test;
import therealflamingo.ado.models.GitPullRequestStatus;
import therealflamingo.ado.models.JsonPatchDocument;

import java.util.List;

/**
 * API tests for PullRequestIterationStatusesApi
 */
@Ignore
public class PullRequestIterationStatusesApiTest {

    private final PullRequestIterationStatusesApi api = new PullRequestIterationStatusesApi();


    /**
     * Create a pull request status on the iteration. This operation will have the same result as Create status on pull request with specified iteration ID in the request body.  The only required field for the status is &#x60;Context.Name&#x60; that uniquely identifies the status. Note that &#x60;iterationId&#x60; in the request body is optional since &#x60;iterationId&#x60; can be specified in the URL. A conflict between &#x60;iterationId&#x60; in the URL and &#x60;iterationId&#x60; in the request body will result in status code 400.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void pullRequestIterationStatusesCreateTest() throws Exception {
        String organization = null;
        GitPullRequestStatus body = null;
        String repositoryId = null;
        Integer pullRequestId = null;
        Integer iterationId = null;
        String project = null;
        String apiVersion = null;
        GitPullRequestStatus response = api.pullRequestIterationStatusesCreate(organization, body, repositoryId, pullRequestId, iterationId, project, apiVersion);

        // TODO: test validations
    }

    /**
     * Delete pull request iteration status.  You can remove multiple statuses in one call by using Update operation.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void pullRequestIterationStatusesDeleteTest() throws Exception {
        String organization = null;
        String repositoryId = null;
        Integer pullRequestId = null;
        Integer iterationId = null;
        Integer statusId = null;
        String project = null;
        String apiVersion = null;
        api.pullRequestIterationStatusesDelete(organization, repositoryId, pullRequestId, iterationId, statusId, project, apiVersion);

        // TODO: test validations
    }

    /**
     * Get the specific pull request iteration status by ID. The status ID is unique within the pull request across all iterations.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void pullRequestIterationStatusesGetTest() throws Exception {
        String organization = null;
        String repositoryId = null;
        Integer pullRequestId = null;
        Integer iterationId = null;
        Integer statusId = null;
        String project = null;
        String apiVersion = null;
        GitPullRequestStatus response = api.pullRequestIterationStatusesGet(organization, repositoryId, pullRequestId, iterationId, statusId, project, apiVersion);

        // TODO: test validations
    }

    /**
     * Get all the statuses associated with a pull request iteration.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void pullRequestIterationStatusesListTest() throws Exception {
        String organization = null;
        String repositoryId = null;
        Integer pullRequestId = null;
        Integer iterationId = null;
        String project = null;
        String apiVersion = null;
        List<GitPullRequestStatus> response = api.pullRequestIterationStatusesList(organization, repositoryId, pullRequestId, iterationId, project, apiVersion);

        // TODO: test validations
    }

    /**
     * Update pull request iteration statuses collection. The only supported operation type is &#x60;remove&#x60;.  This operation allows to delete multiple statuses in one call. The path of the &#x60;remove&#x60; operation should refer to the ID of the pull request status. For example &#x60;path&#x3D;\&quot;/1\&quot;&#x60; refers to the pull request status with ID 1.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void pullRequestIterationStatusesUpdateTest() throws Exception {
        String organization = null;
        JsonPatchDocument body = null;
        String repositoryId = null;
        Integer pullRequestId = null;
        Integer iterationId = null;
        String project = null;
        String apiVersion = null;
        api.pullRequestIterationStatusesUpdate(organization, body, repositoryId, pullRequestId, iterationId, project, apiVersion);

        // TODO: test validations
    }

}
