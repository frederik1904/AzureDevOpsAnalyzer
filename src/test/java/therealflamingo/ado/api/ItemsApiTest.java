/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.api;

import org.junit.Ignore;
import org.junit.Test;
import therealflamingo.ado.models.GitItem;
import therealflamingo.ado.models.GitItemRequestData;

import java.util.List;

/**
 * API tests for ItemsApi
 */
@Ignore
public class ItemsApiTest {

    private final ItemsApi api = new ItemsApi();


    /**
     * Post for retrieving a creating a batch out of a set of items in a repo / project given a list of paths or a long path
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void itemsGetItemsBatchTest() throws Exception {
        String organization = null;
        GitItemRequestData body = null;
        String repositoryId = null;
        String project = null;
        String apiVersion = null;
        List < null > response = api.itemsGetItemsBatch(organization, body, repositoryId, project, apiVersion);

        // TODO: test validations
    }

    /**
     * Get Item Metadata and/or Content for a collection of items. The download parameter is to indicate whether the content should be available as a download or just sent as a stream in the response. Doesn&#39;t apply to zipped content which is always returned as a download.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void itemsListTest() throws Exception {
        String organization = null;
        String repositoryId = null;
        String project = null;
        String apiVersion = null;
        String scopePath = null;
        String recursionLevel = null;
        Boolean includeContentMetadata = null;
        Boolean latestProcessedChange = null;
        Boolean download = null;
        Boolean includeLinks = null;
        String format = null;
        String versionDescriptorVersion = null;
        String versionDescriptorVersionOptions = null;
        String versionDescriptorVersionType = null;
        Boolean zipForUnix = null;
        List<GitItem> response = api.itemsList(organization, repositoryId, project, apiVersion, scopePath, recursionLevel, includeContentMetadata, latestProcessedChange, download, includeLinks, format, versionDescriptorVersion, versionDescriptorVersionOptions, versionDescriptorVersionType, zipForUnix);

        // TODO: test validations
    }

}
