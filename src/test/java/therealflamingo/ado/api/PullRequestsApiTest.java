/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.api;

import org.junit.Ignore;
import org.junit.Test;
import org.threeten.bp.OffsetDateTime;
import therealflamingo.ado.models.GitPullRequest;

import java.util.List;
import java.util.UUID;

/**
 * API tests for PullRequestsApi
 */
@Ignore
public class PullRequestsApiTest {

    private final PullRequestsApi api = new PullRequestsApi();


    /**
     * Create a pull request.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void pullRequestsCreateTest() throws Exception {
        String organization = null;
        GitPullRequest body = null;
        String repositoryId = null;
        String project = null;
        String apiVersion = null;
        Boolean supportsIterations = null;
        GitPullRequest response = api.pullRequestsCreate(organization, body, repositoryId, project, apiVersion, supportsIterations);

        // TODO: test validations
    }

    /**
     * Retrieve a pull request.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void pullRequestsGetPullRequestTest() throws Exception {
        String organization = null;
        String repositoryId = null;
        Integer pullRequestId = null;
        String project = null;
        String apiVersion = null;
        Integer maxCommentLength = null;
        Integer skip = null;
        Integer top = null;
        Boolean includeCommits = null;
        Boolean includeWorkItemRefs = null;
        GitPullRequest response = api.pullRequestsGetPullRequest(organization, repositoryId, pullRequestId, project, apiVersion, maxCommentLength, skip, top, includeCommits, includeWorkItemRefs);

        // TODO: test validations
    }

    /**
     * Retrieve a pull request.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void pullRequestsGetPullRequestByIdTest() throws Exception {
        String organization = null;
        Integer pullRequestId = null;
        String project = null;
        String apiVersion = null;
        GitPullRequest response = api.pullRequestsGetPullRequestById(organization, pullRequestId, project, apiVersion);

        // TODO: test validations
    }

    /**
     * Retrieve all pull requests matching a specified criteria.  Please note that description field will be truncated up to 400 symbols in the result.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void pullRequestsGetPullRequestsTest() throws Exception {
        String organization = null;
        String repositoryId = null;
        String project = null;
        String apiVersion = null;
        UUID searchCriteriaCreatorId = null;
        Boolean searchCriteriaIncludeLinks = null;
        OffsetDateTime searchCriteriaMaxTime = null;
        OffsetDateTime searchCriteriaMinTime = null;
        String searchCriteriaQueryTimeRangeType = null;
        UUID searchCriteriaRepositoryId = null;
        UUID searchCriteriaReviewerId = null;
        String searchCriteriaSourceRefName = null;
        UUID searchCriteriaSourceRepositoryId = null;
        String searchCriteriaStatus = null;
        String searchCriteriaTargetRefName = null;
        Integer maxCommentLength = null;
        Integer skip = null;
        Integer top = null;
        List<GitPullRequest> response = api.pullRequestsGetPullRequests(organization, repositoryId, project, apiVersion, searchCriteriaCreatorId, searchCriteriaIncludeLinks, searchCriteriaMaxTime, searchCriteriaMinTime, searchCriteriaQueryTimeRangeType, searchCriteriaRepositoryId, searchCriteriaReviewerId, searchCriteriaSourceRefName, searchCriteriaSourceRepositoryId, searchCriteriaStatus, searchCriteriaTargetRefName, maxCommentLength, skip, top);

        // TODO: test validations
    }

    /**
     * Retrieve all pull requests matching a specified criteria.  Please note that description field will be truncated up to 400 symbols in the result.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void pullRequestsGetPullRequestsByProjectTest() throws Exception {
        String organization = null;
        String project = null;
        String apiVersion = null;
        UUID searchCriteriaCreatorId = null;
        Boolean searchCriteriaIncludeLinks = null;
        OffsetDateTime searchCriteriaMaxTime = null;
        OffsetDateTime searchCriteriaMinTime = null;
        String searchCriteriaQueryTimeRangeType = null;
        UUID searchCriteriaRepositoryId = null;
        UUID searchCriteriaReviewerId = null;
        String searchCriteriaSourceRefName = null;
        UUID searchCriteriaSourceRepositoryId = null;
        String searchCriteriaStatus = null;
        String searchCriteriaTargetRefName = null;
        Integer maxCommentLength = null;
        Integer skip = null;
        Integer top = null;
        List<GitPullRequest> response = api.pullRequestsGetPullRequestsByProject(organization, project, apiVersion, searchCriteriaCreatorId, searchCriteriaIncludeLinks, searchCriteriaMaxTime, searchCriteriaMinTime, searchCriteriaQueryTimeRangeType, searchCriteriaRepositoryId, searchCriteriaReviewerId, searchCriteriaSourceRefName, searchCriteriaSourceRepositoryId, searchCriteriaStatus, searchCriteriaTargetRefName, maxCommentLength, skip, top);

        // TODO: test validations
    }

    /**
     * Update a pull request  These are the properties that can be updated with the API:  - Status  - Title  - Description (up to 4000 characters)  - CompletionOptions  - MergeOptions  - AutoCompleteSetBy.Id  - TargetRefName (when the PR retargeting feature is enabled)  Attempting to update other properties outside of this list will either cause the server to throw an &#x60;InvalidArgumentValueException&#x60;,  or to silently ignore the update.
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void pullRequestsUpdateTest() throws Exception {
        String organization = null;
        GitPullRequest body = null;
        String repositoryId = null;
        Integer pullRequestId = null;
        String project = null;
        String apiVersion = null;
        GitPullRequest response = api.pullRequestsUpdate(organization, body, repositoryId, pullRequestId, project, apiVersion);

        // TODO: test validations
    }

}
