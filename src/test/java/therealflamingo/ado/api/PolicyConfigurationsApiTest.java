/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.api;

import org.junit.Ignore;
import org.junit.Test;
import therealflamingo.ado.models.PolicyConfiguration;

import java.util.List;
import java.util.UUID;

/**
 * API tests for PolicyConfigurationsApi
 */
@Ignore
public class PolicyConfigurationsApiTest {

    private final PolicyConfigurationsApi api = new PolicyConfigurationsApi();


    /**
     * Retrieve a list of policy configurations by a given set of scope/filtering criteria.  Below is a short description of how all of the query parameters interact with each other: - repositoryId set, refName set: returns all policy configurations that *apply* to a particular branch in a repository - repositoryId set, refName unset: returns all policy configurations that *apply* to a particular repository - repositoryId unset, refName unset: returns all policy configurations that are *defined* at the project level - repositoryId unset, refName set: returns all project-level branch policies, plus the project level configurations For all of the examples above, when policyType is set, it&#39;ll restrict results to the given policy type
     *
     * @throws Exception if the Api call fails
     */
    @Test
    public void policyConfigurationsGetTest() throws Exception {
        String organization = null;
        String project = null;
        String apiVersion = null;
        UUID repositoryId = null;
        String refName = null;
        UUID policyType = null;
        Integer top = null;
        String continuationToken = null;
        List<PolicyConfiguration> response = api.policyConfigurationsGet(organization, project, apiVersion, repositoryId, refName, policyType, top, continuationToken);

        // TODO: test validations
    }

}
