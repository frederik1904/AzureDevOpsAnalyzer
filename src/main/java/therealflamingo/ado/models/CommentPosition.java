/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class CommentPosition {
  @JsonProperty("line")
  private Integer line = null;

  @JsonProperty("offset")
  private Integer offset = null;

  public CommentPosition line(Integer line) {
    this.line = line;
    return this;
  }

   /**
   * The line number of a thread&#39;s position. Starts at 1.
   * @return line
  **/
  @ApiModelProperty(value = "The line number of a thread's position. Starts at 1.")
  public Integer getLine() {
    return line;
  }

  public void setLine(Integer line) {
    this.line = line;
  }

  public CommentPosition offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * The character offset of a thread&#39;s position inside of a line. Starts at 1.
   * @return offset
  **/
  @ApiModelProperty(value = "The character offset of a thread's position inside of a line. Starts at 1.")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommentPosition commentPosition = (CommentPosition) o;
    return Objects.equals(this.line, commentPosition.line) &&
        Objects.equals(this.offset, commentPosition.offset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(line, offset);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommentPosition {\n");
    
    sb.append("    line: ").append(toIndentedString(line)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

