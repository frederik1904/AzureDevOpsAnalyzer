/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import therealflamingo.ado.models.TeamProjectReference;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class GitForkTeamProjectReference extends TeamProjectReference {
  @JsonProperty("abbreviation")
  private String abbreviation = null;

  @JsonProperty("defaultTeamImageUrl")
  private String defaultTeamImageUrl = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("lastUpdateTime")
  private OffsetDateTime lastUpdateTime = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("revision")
  private Long revision = null;

  @JsonProperty("url")
  private String url = null;

  public GitForkTeamProjectReference abbreviation(String abbreviation) {
    this.abbreviation = abbreviation;
    return this;
  }

   /**
   * Project abbreviation.
   * @return abbreviation
  **/
  @ApiModelProperty(value = "Project abbreviation.")
  public String getAbbreviation() {
    return abbreviation;
  }

  public void setAbbreviation(String abbreviation) {
    this.abbreviation = abbreviation;
  }

  public GitForkTeamProjectReference defaultTeamImageUrl(String defaultTeamImageUrl) {
    this.defaultTeamImageUrl = defaultTeamImageUrl;
    return this;
  }

   /**
   * Url to default team identity image.
   * @return defaultTeamImageUrl
  **/
  @ApiModelProperty(value = "Url to default team identity image.")
  public String getDefaultTeamImageUrl() {
    return defaultTeamImageUrl;
  }

  public void setDefaultTeamImageUrl(String defaultTeamImageUrl) {
    this.defaultTeamImageUrl = defaultTeamImageUrl;
  }

  public GitForkTeamProjectReference description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The project&#39;s description (if any).
   * @return description
  **/
  @ApiModelProperty(value = "The project's description (if any).")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public GitForkTeamProjectReference id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Project identifier.
   * @return id
  **/
  @ApiModelProperty(value = "Project identifier.")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public GitForkTeamProjectReference lastUpdateTime(OffsetDateTime lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
    return this;
  }

   /**
   * Project last update time.
   * @return lastUpdateTime
  **/
  @ApiModelProperty(value = "Project last update time.")
  public OffsetDateTime getLastUpdateTime() {
    return lastUpdateTime;
  }

  public void setLastUpdateTime(OffsetDateTime lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
  }

  public GitForkTeamProjectReference name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Project name.
   * @return name
  **/
  @ApiModelProperty(value = "Project name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GitForkTeamProjectReference revision(Long revision) {
    this.revision = revision;
    return this;
  }

   /**
   * Project revision.
   * @return revision
  **/
  @ApiModelProperty(value = "Project revision.")
  public Long getRevision() {
    return revision;
  }

  public void setRevision(Long revision) {
    this.revision = revision;
  }

  public GitForkTeamProjectReference url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Url to the full version of the object.
   * @return url
  **/
  @ApiModelProperty(value = "Url to the full version of the object.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GitForkTeamProjectReference gitForkTeamProjectReference = (GitForkTeamProjectReference) o;
    return Objects.equals(this.abbreviation, gitForkTeamProjectReference.abbreviation) &&
        Objects.equals(this.defaultTeamImageUrl, gitForkTeamProjectReference.defaultTeamImageUrl) &&
        Objects.equals(this.description, gitForkTeamProjectReference.description) &&
        Objects.equals(this.id, gitForkTeamProjectReference.id) &&
        Objects.equals(this.lastUpdateTime, gitForkTeamProjectReference.lastUpdateTime) &&
        Objects.equals(this.name, gitForkTeamProjectReference.name) &&
        Objects.equals(this.revision, gitForkTeamProjectReference.revision) &&
        Objects.equals(this.url, gitForkTeamProjectReference.url) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abbreviation, defaultTeamImageUrl, description, id, lastUpdateTime, name, revision, url, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GitForkTeamProjectReference {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    abbreviation: ").append(toIndentedString(abbreviation)).append("\n");
    sb.append("    defaultTeamImageUrl: ").append(toIndentedString(defaultTeamImageUrl)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastUpdateTime: ").append(toIndentedString(lastUpdateTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

