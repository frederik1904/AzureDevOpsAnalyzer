/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Parameters required for performing git merge.
 */
@ApiModel(description = "Parameters required for performing git merge.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class GitMergeParameters {
  @JsonProperty("comment")
  private String comment = null;

  @JsonProperty("parents")
  private List<String> parents = null;

  public GitMergeParameters comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Comment or message of the commit.
   *
   * @return comment
   **/
  @ApiModelProperty(value = "Comment or message of the commit.")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public GitMergeParameters parents(List<String> parents) {
    this.parents = parents;
    return this;
  }

  public GitMergeParameters addParentsItem(String parentsItem) {
    if (this.parents == null) {
      this.parents = new ArrayList<String>();
    }
    this.parents.add(parentsItem);
    return this;
  }

  /**
   * An enumeration of the parent commit IDs for the merge  commit.
   *
   * @return parents
   **/
  @ApiModelProperty(value = "An enumeration of the parent commit IDs for the merge  commit.")
  public List<String> getParents() {
    return parents;
  }

  public void setParents(List<String> parents) {
    this.parents = parents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GitMergeParameters gitMergeParameters = (GitMergeParameters) o;
    return Objects.equals(this.comment, gitMergeParameters.comment) &&
            Objects.equals(this.parents, gitMergeParameters.parents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(comment, parents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GitMergeParameters {\n");

    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    parents: ").append(toIndentedString(parents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

