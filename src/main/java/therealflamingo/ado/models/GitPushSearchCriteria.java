/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class GitPushSearchCriteria {
  @JsonProperty("fromDate")
  private OffsetDateTime fromDate = null;

  @JsonProperty("includeLinks")
  private Boolean includeLinks = null;

  @JsonProperty("includeRefUpdates")
  private Boolean includeRefUpdates = null;

  @JsonProperty("pusherId")
  private UUID pusherId = null;

  @JsonProperty("refName")
  private String refName = null;

  @JsonProperty("toDate")
  private OffsetDateTime toDate = null;

  public GitPushSearchCriteria fromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
    return this;
  }

   /**
   * Get fromDate
   * @return fromDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getFromDate() {
    return fromDate;
  }

  public void setFromDate(OffsetDateTime fromDate) {
    this.fromDate = fromDate;
  }

  public GitPushSearchCriteria includeLinks(Boolean includeLinks) {
    this.includeLinks = includeLinks;
    return this;
  }

   /**
   * Whether to include the _links field on the shallow references
   * @return includeLinks
  **/
  @ApiModelProperty(value = "Whether to include the _links field on the shallow references")
  public Boolean isIncludeLinks() {
    return includeLinks;
  }

  public void setIncludeLinks(Boolean includeLinks) {
    this.includeLinks = includeLinks;
  }

  public GitPushSearchCriteria includeRefUpdates(Boolean includeRefUpdates) {
    this.includeRefUpdates = includeRefUpdates;
    return this;
  }

   /**
   * Get includeRefUpdates
   * @return includeRefUpdates
  **/
  @ApiModelProperty(value = "")
  public Boolean isIncludeRefUpdates() {
    return includeRefUpdates;
  }

  public void setIncludeRefUpdates(Boolean includeRefUpdates) {
    this.includeRefUpdates = includeRefUpdates;
  }

  public GitPushSearchCriteria pusherId(UUID pusherId) {
    this.pusherId = pusherId;
    return this;
  }

   /**
   * Get pusherId
   * @return pusherId
  **/
  @ApiModelProperty(value = "")
  public UUID getPusherId() {
    return pusherId;
  }

  public void setPusherId(UUID pusherId) {
    this.pusherId = pusherId;
  }

  public GitPushSearchCriteria refName(String refName) {
    this.refName = refName;
    return this;
  }

   /**
   * Get refName
   * @return refName
  **/
  @ApiModelProperty(value = "")
  public String getRefName() {
    return refName;
  }

  public void setRefName(String refName) {
    this.refName = refName;
  }

  public GitPushSearchCriteria toDate(OffsetDateTime toDate) {
    this.toDate = toDate;
    return this;
  }

   /**
   * Get toDate
   * @return toDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getToDate() {
    return toDate;
  }

  public void setToDate(OffsetDateTime toDate) {
    this.toDate = toDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GitPushSearchCriteria gitPushSearchCriteria = (GitPushSearchCriteria) o;
    return Objects.equals(this.fromDate, gitPushSearchCriteria.fromDate) &&
        Objects.equals(this.includeLinks, gitPushSearchCriteria.includeLinks) &&
        Objects.equals(this.includeRefUpdates, gitPushSearchCriteria.includeRefUpdates) &&
        Objects.equals(this.pusherId, gitPushSearchCriteria.pusherId) &&
        Objects.equals(this.refName, gitPushSearchCriteria.refName) &&
        Objects.equals(this.toDate, gitPushSearchCriteria.toDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromDate, includeLinks, includeRefUpdates, pusherId, refName, toDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GitPushSearchCriteria {\n");
    
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    includeLinks: ").append(toIndentedString(includeLinks)).append("\n");
    sb.append("    includeRefUpdates: ").append(toIndentedString(includeRefUpdates)).append("\n");
    sb.append("    pusherId: ").append(toIndentedString(pusherId)).append("\n");
    sb.append("    refName: ").append(toIndentedString(refName)).append("\n");
    sb.append("    toDate: ").append(toIndentedString(toDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

