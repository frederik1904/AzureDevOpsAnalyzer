/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import therealflamingo.ado.models.Change;
import therealflamingo.ado.models.CheckinNote;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class ChangeList {
  @JsonProperty("allChangesIncluded")
  private Boolean allChangesIncluded = null;

  @JsonProperty("changeCounts")
  private Map<String, Integer> changeCounts = null;

  @JsonProperty("changes")
  private List<Change> changes = null;

  @JsonProperty("comment")
  private String comment = null;

  @JsonProperty("commentTruncated")
  private Boolean commentTruncated = null;

  @JsonProperty("creationDate")
  private OffsetDateTime creationDate = null;

  @JsonProperty("notes")
  private List<CheckinNote> notes = null;

  @JsonProperty("owner")
  private String owner = null;

  @JsonProperty("ownerDisplayName")
  private String ownerDisplayName = null;

  @JsonProperty("ownerId")
  private UUID ownerId = null;

  @JsonProperty("sortDate")
  private OffsetDateTime sortDate = null;

  @JsonProperty("version")
  private String version = null;

  public ChangeList allChangesIncluded(Boolean allChangesIncluded) {
    this.allChangesIncluded = allChangesIncluded;
    return this;
  }

   /**
   * Get allChangesIncluded
   * @return allChangesIncluded
  **/
  @ApiModelProperty(value = "")
  public Boolean isAllChangesIncluded() {
    return allChangesIncluded;
  }

  public void setAllChangesIncluded(Boolean allChangesIncluded) {
    this.allChangesIncluded = allChangesIncluded;
  }

  public ChangeList changeCounts(Map<String, Integer> changeCounts) {
    this.changeCounts = changeCounts;
    return this;
  }

  public ChangeList putChangeCountsItem(String key, Integer changeCountsItem) {
    if (this.changeCounts == null) {
      this.changeCounts = new HashMap<String, Integer>();
    }
    this.changeCounts.put(key, changeCountsItem);
    return this;
  }

   /**
   * Get changeCounts
   * @return changeCounts
  **/
  @ApiModelProperty(value = "")
  public Map<String, Integer> getChangeCounts() {
    return changeCounts;
  }

  public void setChangeCounts(Map<String, Integer> changeCounts) {
    this.changeCounts = changeCounts;
  }

  public ChangeList changes(List<Change> changes) {
    this.changes = changes;
    return this;
  }

  public ChangeList addChangesItem(Change changesItem) {
    if (this.changes == null) {
      this.changes = new ArrayList<Change>();
    }
    this.changes.add(changesItem);
    return this;
  }

   /**
   * Get changes
   * @return changes
  **/
  @ApiModelProperty(value = "")
  public List<Change> getChanges() {
    return changes;
  }

  public void setChanges(List<Change> changes) {
    this.changes = changes;
  }

  public ChangeList comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @ApiModelProperty(value = "")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public ChangeList commentTruncated(Boolean commentTruncated) {
    this.commentTruncated = commentTruncated;
    return this;
  }

   /**
   * Get commentTruncated
   * @return commentTruncated
  **/
  @ApiModelProperty(value = "")
  public Boolean isCommentTruncated() {
    return commentTruncated;
  }

  public void setCommentTruncated(Boolean commentTruncated) {
    this.commentTruncated = commentTruncated;
  }

  public ChangeList creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public ChangeList notes(List<CheckinNote> notes) {
    this.notes = notes;
    return this;
  }

  public ChangeList addNotesItem(CheckinNote notesItem) {
    if (this.notes == null) {
      this.notes = new ArrayList<CheckinNote>();
    }
    this.notes.add(notesItem);
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @ApiModelProperty(value = "")
  public List<CheckinNote> getNotes() {
    return notes;
  }

  public void setNotes(List<CheckinNote> notes) {
    this.notes = notes;
  }

  public ChangeList owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public ChangeList ownerDisplayName(String ownerDisplayName) {
    this.ownerDisplayName = ownerDisplayName;
    return this;
  }

   /**
   * Get ownerDisplayName
   * @return ownerDisplayName
  **/
  @ApiModelProperty(value = "")
  public String getOwnerDisplayName() {
    return ownerDisplayName;
  }

  public void setOwnerDisplayName(String ownerDisplayName) {
    this.ownerDisplayName = ownerDisplayName;
  }

  public ChangeList ownerId(UUID ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * Get ownerId
   * @return ownerId
  **/
  @ApiModelProperty(value = "")
  public UUID getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(UUID ownerId) {
    this.ownerId = ownerId;
  }

  public ChangeList sortDate(OffsetDateTime sortDate) {
    this.sortDate = sortDate;
    return this;
  }

   /**
   * Get sortDate
   * @return sortDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getSortDate() {
    return sortDate;
  }

  public void setSortDate(OffsetDateTime sortDate) {
    this.sortDate = sortDate;
  }

  public ChangeList version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangeList changeList = (ChangeList) o;
    return Objects.equals(this.allChangesIncluded, changeList.allChangesIncluded) &&
        Objects.equals(this.changeCounts, changeList.changeCounts) &&
        Objects.equals(this.changes, changeList.changes) &&
        Objects.equals(this.comment, changeList.comment) &&
        Objects.equals(this.commentTruncated, changeList.commentTruncated) &&
        Objects.equals(this.creationDate, changeList.creationDate) &&
        Objects.equals(this.notes, changeList.notes) &&
        Objects.equals(this.owner, changeList.owner) &&
        Objects.equals(this.ownerDisplayName, changeList.ownerDisplayName) &&
        Objects.equals(this.ownerId, changeList.ownerId) &&
        Objects.equals(this.sortDate, changeList.sortDate) &&
        Objects.equals(this.version, changeList.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allChangesIncluded, changeCounts, changes, comment, commentTruncated, creationDate, notes, owner, ownerDisplayName, ownerId, sortDate, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangeList {\n");
    
    sb.append("    allChangesIncluded: ").append(toIndentedString(allChangesIncluded)).append("\n");
    sb.append("    changeCounts: ").append(toIndentedString(changeCounts)).append("\n");
    sb.append("    changes: ").append(toIndentedString(changes)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    commentTruncated: ").append(toIndentedString(commentTruncated)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    ownerDisplayName: ").append(toIndentedString(ownerDisplayName)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    sortDate: ").append(toIndentedString(sortDate)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

