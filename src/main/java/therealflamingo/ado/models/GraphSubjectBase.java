/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 *
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class GraphSubjectBase {
  @JsonProperty("_links")
  private ReferenceLinks links = null;

  @JsonProperty("descriptor")
  private String descriptor = null;

  @JsonProperty("displayName")
  private String displayName = null;

  @JsonProperty("url")
  private String url = null;

  public GraphSubjectBase links(ReferenceLinks links) {
    this.links = links;
    return this;
  }

  /**
   * This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional relationships or more detailed information about this graph subject.
   *
   * @return links
   **/
  @ApiModelProperty(value = "This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional relationships or more detailed information about this graph subject.")
  public ReferenceLinks getLinks() {
    return links;
  }

  public void setLinks(ReferenceLinks links) {
    this.links = links;
  }

  public GraphSubjectBase descriptor(String descriptor) {
    this.descriptor = descriptor;
    return this;
  }

  /**
   * The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations.
   *
   * @return descriptor
   **/
  @ApiModelProperty(value = "The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations.")
  public String getDescriptor() {
    return descriptor;
  }

  public void setDescriptor(String descriptor) {
    this.descriptor = descriptor;
  }

  public GraphSubjectBase displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.
   *
   * @return displayName
   **/
  @ApiModelProperty(value = "This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public GraphSubjectBase url(String url) {
    this.url = url;
    return this;
  }

  /**
   * This url is the full route to the source resource of this graph subject.
   *
   * @return url
   **/
  @ApiModelProperty(value = "This url is the full route to the source resource of this graph subject.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GraphSubjectBase graphSubjectBase = (GraphSubjectBase) o;
    return Objects.equals(this.links, graphSubjectBase.links) &&
            Objects.equals(this.descriptor, graphSubjectBase.descriptor) &&
            Objects.equals(this.displayName, graphSubjectBase.displayName) &&
            Objects.equals(this.url, graphSubjectBase.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, descriptor, displayName, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GraphSubjectBase {\n");

    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    descriptor: ").append(toIndentedString(descriptor)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

