/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Identity information including a vote on a pull request.
 */
@ApiModel(description = "Identity information including a vote on a pull request.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class IdentityRefWithVote extends IdentityRef {
  @JsonProperty("directoryAlias")
  private String directoryAlias = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("imageUrl")
  private String imageUrl = null;

  @JsonProperty("inactive")
  private Boolean inactive = null;

  @JsonProperty("isAadIdentity")
  private Boolean isAadIdentity = null;

  @JsonProperty("isContainer")
  private Boolean isContainer = null;

  @JsonProperty("isDeletedInOrigin")
  private Boolean isDeletedInOrigin = null;

  @JsonProperty("profileUrl")
  private String profileUrl = null;

  @JsonProperty("uniqueName")
  private String uniqueName = null;

  @JsonProperty("_links")
  private ReferenceLinks links = null;

  @JsonProperty("descriptor")
  private String descriptor = null;

  @JsonProperty("displayName")
  private String displayName = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("hasDeclined")
  private Boolean hasDeclined = null;

  @JsonProperty("isFlagged")
  private Boolean isFlagged = null;

  @JsonProperty("isReapprove")
  private Boolean isReapprove = null;

  @JsonProperty("isRequired")
  private Boolean isRequired = null;

  @JsonProperty("reviewerUrl")
  private String reviewerUrl = null;

  @JsonProperty("vote")
  private Integer vote = null;

  @JsonProperty("votedFor")
  private List<IdentityRefWithVote> votedFor = null;

  public IdentityRefWithVote directoryAlias(String directoryAlias) {
    this.directoryAlias = directoryAlias;
    return this;
  }

  /**
   * Deprecated - Can be retrieved by querying the Graph user referenced in the \&quot;self\&quot; entry of the IdentityRef \&quot;_links\&quot; dictionary
   *
   * @return directoryAlias
   **/
  @ApiModelProperty(value = "Deprecated - Can be retrieved by querying the Graph user referenced in the \"self\" entry of the IdentityRef \"_links\" dictionary")
  public String getDirectoryAlias() {
    return directoryAlias;
  }

  public void setDirectoryAlias(String directoryAlias) {
    this.directoryAlias = directoryAlias;
  }

  public IdentityRefWithVote id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public IdentityRefWithVote imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

  /**
   * Deprecated - Available in the \&quot;avatar\&quot; entry of the IdentityRef \&quot;_links\&quot; dictionary
   *
   * @return imageUrl
   **/
  @ApiModelProperty(value = "Deprecated - Available in the \"avatar\" entry of the IdentityRef \"_links\" dictionary")
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }

  public IdentityRefWithVote inactive(Boolean inactive) {
    this.inactive = inactive;
    return this;
  }

  /**
   * Deprecated - Can be retrieved by querying the Graph membership state referenced in the \&quot;membershipState\&quot; entry of the GraphUser \&quot;_links\&quot; dictionary
   *
   * @return inactive
   **/
  @ApiModelProperty(value = "Deprecated - Can be retrieved by querying the Graph membership state referenced in the \"membershipState\" entry of the GraphUser \"_links\" dictionary")
  public Boolean isInactive() {
    return inactive;
  }

  public void setInactive(Boolean inactive) {
    this.inactive = inactive;
  }

  public IdentityRefWithVote isAadIdentity(Boolean isAadIdentity) {
    this.isAadIdentity = isAadIdentity;
    return this;
  }

  /**
   * Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsAadUserType/Descriptor.IsAadGroupType)
   *
   * @return isAadIdentity
   **/
  @ApiModelProperty(value = "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsAadUserType/Descriptor.IsAadGroupType)")
  public Boolean isIsAadIdentity() {
    return isAadIdentity;
  }

  public void setIsAadIdentity(Boolean isAadIdentity) {
    this.isAadIdentity = isAadIdentity;
  }

  public IdentityRefWithVote isContainer(Boolean isContainer) {
    this.isContainer = isContainer;
    return this;
  }

  /**
   * Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsGroupType)
   *
   * @return isContainer
   **/
  @ApiModelProperty(value = "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsGroupType)")
  public Boolean isIsContainer() {
    return isContainer;
  }

  public void setIsContainer(Boolean isContainer) {
    this.isContainer = isContainer;
  }

  public IdentityRefWithVote isDeletedInOrigin(Boolean isDeletedInOrigin) {
    this.isDeletedInOrigin = isDeletedInOrigin;
    return this;
  }

  /**
   * Get isDeletedInOrigin
   *
   * @return isDeletedInOrigin
   **/
  @ApiModelProperty(value = "")
  public Boolean isIsDeletedInOrigin() {
    return isDeletedInOrigin;
  }

  public void setIsDeletedInOrigin(Boolean isDeletedInOrigin) {
    this.isDeletedInOrigin = isDeletedInOrigin;
  }

  public IdentityRefWithVote profileUrl(String profileUrl) {
    this.profileUrl = profileUrl;
    return this;
  }

  /**
   * Deprecated - not in use in most preexisting implementations of ToIdentityRef
   *
   * @return profileUrl
   **/
  @ApiModelProperty(value = "Deprecated - not in use in most preexisting implementations of ToIdentityRef")
  public String getProfileUrl() {
    return profileUrl;
  }

  public void setProfileUrl(String profileUrl) {
    this.profileUrl = profileUrl;
  }

  public IdentityRefWithVote uniqueName(String uniqueName) {
    this.uniqueName = uniqueName;
    return this;
  }

  /**
   * Deprecated - use Domain+PrincipalName instead
   *
   * @return uniqueName
   **/
  @ApiModelProperty(value = "Deprecated - use Domain+PrincipalName instead")
  public String getUniqueName() {
    return uniqueName;
  }

  public void setUniqueName(String uniqueName) {
    this.uniqueName = uniqueName;
  }

  public IdentityRefWithVote links(ReferenceLinks links) {
    this.links = links;
    return this;
  }

  /**
   * This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional relationships or more detailed information about this graph subject.
   *
   * @return links
   **/
  @ApiModelProperty(value = "This field contains zero or more interesting links about the graph subject. These links may be invoked to obtain additional relationships or more detailed information about this graph subject.")
  public ReferenceLinks getLinks() {
    return links;
  }

  public void setLinks(ReferenceLinks links) {
    this.links = links;
  }

  public IdentityRefWithVote descriptor(String descriptor) {
    this.descriptor = descriptor;
    return this;
  }

  /**
   * The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations.
   *
   * @return descriptor
   **/
  @ApiModelProperty(value = "The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations.")
  public String getDescriptor() {
    return descriptor;
  }

  public void setDescriptor(String descriptor) {
    this.descriptor = descriptor;
  }

  public IdentityRefWithVote displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.
   *
   * @return displayName
   **/
  @ApiModelProperty(value = "This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider.")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public IdentityRefWithVote url(String url) {
    this.url = url;
    return this;
  }

  /**
   * This url is the full route to the source resource of this graph subject.
   *
   * @return url
   **/
  @ApiModelProperty(value = "This url is the full route to the source resource of this graph subject.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public IdentityRefWithVote hasDeclined(Boolean hasDeclined) {
    this.hasDeclined = hasDeclined;
    return this;
  }

  /**
   * Indicates if this reviewer has declined to review this pull request.
   *
   * @return hasDeclined
   **/
  @ApiModelProperty(value = "Indicates if this reviewer has declined to review this pull request.")
  public Boolean isHasDeclined() {
    return hasDeclined;
  }

  public void setHasDeclined(Boolean hasDeclined) {
    this.hasDeclined = hasDeclined;
  }

  public IdentityRefWithVote isFlagged(Boolean isFlagged) {
    this.isFlagged = isFlagged;
    return this;
  }

  /**
   * Indicates if this reviewer is flagged for attention on this pull request.
   *
   * @return isFlagged
   **/
  @ApiModelProperty(value = "Indicates if this reviewer is flagged for attention on this pull request.")
  public Boolean isIsFlagged() {
    return isFlagged;
  }

  public void setIsFlagged(Boolean isFlagged) {
    this.isFlagged = isFlagged;
  }

  public IdentityRefWithVote isReapprove(Boolean isReapprove) {
    this.isReapprove = isReapprove;
    return this;
  }

  /**
   * Indicates if this approve vote should still be handled even though vote didn&#39;t change.
   *
   * @return isReapprove
   **/
  @ApiModelProperty(value = "Indicates if this approve vote should still be handled even though vote didn't change.")
  public Boolean isIsReapprove() {
    return isReapprove;
  }

  public void setIsReapprove(Boolean isReapprove) {
    this.isReapprove = isReapprove;
  }

  public IdentityRefWithVote isRequired(Boolean isRequired) {
    this.isRequired = isRequired;
    return this;
  }

  /**
   * Indicates if this is a required reviewer for this pull request. &lt;br /&gt; Branches can have policies that require particular reviewers are required for pull requests.
   *
   * @return isRequired
   **/
  @ApiModelProperty(value = "Indicates if this is a required reviewer for this pull request. <br /> Branches can have policies that require particular reviewers are required for pull requests.")
  public Boolean isIsRequired() {
    return isRequired;
  }

  public void setIsRequired(Boolean isRequired) {
    this.isRequired = isRequired;
  }

  public IdentityRefWithVote reviewerUrl(String reviewerUrl) {
    this.reviewerUrl = reviewerUrl;
    return this;
  }

  /**
   * URL to retrieve information about this identity
   *
   * @return reviewerUrl
   **/
  @ApiModelProperty(value = "URL to retrieve information about this identity")
  public String getReviewerUrl() {
    return reviewerUrl;
  }

  public void setReviewerUrl(String reviewerUrl) {
    this.reviewerUrl = reviewerUrl;
  }

  public IdentityRefWithVote vote(Integer vote) {
    this.vote = vote;
    return this;
  }

  /**
   * Vote on a pull request:&lt;br /&gt; 10 - approved 5 - approved with suggestions 0 - no vote -5 - waiting for author -10 - rejected
   *
   * @return vote
   **/
  @ApiModelProperty(value = "Vote on a pull request:<br /> 10 - approved 5 - approved with suggestions 0 - no vote -5 - waiting for author -10 - rejected")
  public Integer getVote() {
    return vote;
  }

  public void setVote(Integer vote) {
    this.vote = vote;
  }

  public IdentityRefWithVote votedFor(List<IdentityRefWithVote> votedFor) {
    this.votedFor = votedFor;
    return this;
  }

  public IdentityRefWithVote addVotedForItem(IdentityRefWithVote votedForItem) {
    if (this.votedFor == null) {
      this.votedFor = new ArrayList<IdentityRefWithVote>();
    }
    this.votedFor.add(votedForItem);
    return this;
  }

  /**
   * Groups or teams that this reviewer contributed to. &lt;br /&gt; Groups and teams can be reviewers on pull requests but can not vote directly.  When a member of the group or team votes, that vote is rolled up into the group or team vote.  VotedFor is a list of such votes.
   *
   * @return votedFor
   **/
  @ApiModelProperty(value = "Groups or teams that this reviewer contributed to. <br /> Groups and teams can be reviewers on pull requests but can not vote directly.  When a member of the group or team votes, that vote is rolled up into the group or team vote.  VotedFor is a list of such votes.")
  public List<IdentityRefWithVote> getVotedFor() {
    return votedFor;
  }

  public void setVotedFor(List<IdentityRefWithVote> votedFor) {
    this.votedFor = votedFor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentityRefWithVote identityRefWithVote = (IdentityRefWithVote) o;
    return Objects.equals(this.directoryAlias, identityRefWithVote.directoryAlias) &&
            Objects.equals(this.id, identityRefWithVote.id) &&
            Objects.equals(this.imageUrl, identityRefWithVote.imageUrl) &&
            Objects.equals(this.inactive, identityRefWithVote.inactive) &&
            Objects.equals(this.isAadIdentity, identityRefWithVote.isAadIdentity) &&
            Objects.equals(this.isContainer, identityRefWithVote.isContainer) &&
            Objects.equals(this.isDeletedInOrigin, identityRefWithVote.isDeletedInOrigin) &&
            Objects.equals(this.profileUrl, identityRefWithVote.profileUrl) &&
            Objects.equals(this.uniqueName, identityRefWithVote.uniqueName) &&
            Objects.equals(this.links, identityRefWithVote.links) &&
            Objects.equals(this.descriptor, identityRefWithVote.descriptor) &&
            Objects.equals(this.displayName, identityRefWithVote.displayName) &&
            Objects.equals(this.url, identityRefWithVote.url) &&
            Objects.equals(this.hasDeclined, identityRefWithVote.hasDeclined) &&
            Objects.equals(this.isFlagged, identityRefWithVote.isFlagged) &&
            Objects.equals(this.isReapprove, identityRefWithVote.isReapprove) &&
            Objects.equals(this.isRequired, identityRefWithVote.isRequired) &&
            Objects.equals(this.reviewerUrl, identityRefWithVote.reviewerUrl) &&
            Objects.equals(this.vote, identityRefWithVote.vote) &&
            Objects.equals(this.votedFor, identityRefWithVote.votedFor) &&
            super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(directoryAlias, id, imageUrl, inactive, isAadIdentity, isContainer, isDeletedInOrigin, profileUrl, uniqueName, links, descriptor, displayName, url, hasDeclined, isFlagged, isReapprove, isRequired, reviewerUrl, vote, votedFor, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentityRefWithVote {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    directoryAlias: ").append(toIndentedString(directoryAlias)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    inactive: ").append(toIndentedString(inactive)).append("\n");
    sb.append("    isAadIdentity: ").append(toIndentedString(isAadIdentity)).append("\n");
    sb.append("    isContainer: ").append(toIndentedString(isContainer)).append("\n");
    sb.append("    isDeletedInOrigin: ").append(toIndentedString(isDeletedInOrigin)).append("\n");
    sb.append("    profileUrl: ").append(toIndentedString(profileUrl)).append("\n");
    sb.append("    uniqueName: ").append(toIndentedString(uniqueName)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    descriptor: ").append(toIndentedString(descriptor)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    hasDeclined: ").append(toIndentedString(hasDeclined)).append("\n");
    sb.append("    isFlagged: ").append(toIndentedString(isFlagged)).append("\n");
    sb.append("    isReapprove: ").append(toIndentedString(isReapprove)).append("\n");
    sb.append("    isRequired: ").append(toIndentedString(isRequired)).append("\n");
    sb.append("    reviewerUrl: ").append(toIndentedString(reviewerUrl)).append("\n");
    sb.append("    vote: ").append(toIndentedString(vote)).append("\n");
    sb.append("    votedFor: ").append(toIndentedString(votedFor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

