/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Provides properties that describe file differences
 */
@ApiModel(description = "Provides properties that describe file differences")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class FileDiff {
  @JsonProperty("lineDiffBlocks")
  private List<LineDiffBlock> lineDiffBlocks = null;

  @JsonProperty("originalPath")
  private String originalPath = null;

  @JsonProperty("path")
  private String path = null;

  public FileDiff lineDiffBlocks(List<LineDiffBlock> lineDiffBlocks) {
    this.lineDiffBlocks = lineDiffBlocks;
    return this;
  }

  public FileDiff addLineDiffBlocksItem(LineDiffBlock lineDiffBlocksItem) {
    if (this.lineDiffBlocks == null) {
      this.lineDiffBlocks = new ArrayList<LineDiffBlock>();
    }
    this.lineDiffBlocks.add(lineDiffBlocksItem);
    return this;
  }

  /**
   * The collection of line diff blocks
   *
   * @return lineDiffBlocks
   **/
  @ApiModelProperty(value = "The collection of line diff blocks")
  public List<LineDiffBlock> getLineDiffBlocks() {
    return lineDiffBlocks;
  }

  public void setLineDiffBlocks(List<LineDiffBlock> lineDiffBlocks) {
    this.lineDiffBlocks = lineDiffBlocks;
  }

  public FileDiff originalPath(String originalPath) {
    this.originalPath = originalPath;
    return this;
  }

  /**
   * Original path of item if different from current path.
   *
   * @return originalPath
   **/
  @ApiModelProperty(value = "Original path of item if different from current path.")
  public String getOriginalPath() {
    return originalPath;
  }

  public void setOriginalPath(String originalPath) {
    this.originalPath = originalPath;
  }

  public FileDiff path(String path) {
    this.path = path;
    return this;
  }

  /**
   * Current path of item
   *
   * @return path
   **/
  @ApiModelProperty(value = "Current path of item")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileDiff fileDiff = (FileDiff) o;
    return Objects.equals(this.lineDiffBlocks, fileDiff.lineDiffBlocks) &&
            Objects.equals(this.originalPath, fileDiff.originalPath) &&
            Objects.equals(this.path, fileDiff.path);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lineDiffBlocks, originalPath, path);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileDiff {\n");

    sb.append("    lineDiffBlocks: ").append(toIndentedString(lineDiffBlocks)).append("\n");
    sb.append("    originalPath: ").append(toIndentedString(originalPath)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

