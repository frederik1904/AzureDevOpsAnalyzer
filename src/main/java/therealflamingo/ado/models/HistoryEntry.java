/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 *
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class HistoryEntry {
  @JsonProperty("changeList")
  private ChangeList changeList = null;
  @JsonProperty("itemChangeType")
  private ItemChangeTypeEnum itemChangeType = null;
  @JsonProperty("serverItem")
  private String serverItem = null;

  public HistoryEntry changeList(ChangeList changeList) {
    this.changeList = changeList;
    return this;
  }

  /**
   * The Change list (changeset/commit/shelveset) for this point in history
   *
   * @return changeList
   **/
  @ApiModelProperty(value = "The Change list (changeset/commit/shelveset) for this point in history")
  public ChangeList getChangeList() {
    return changeList;
  }

  public void setChangeList(ChangeList changeList) {
    this.changeList = changeList;
  }

  public HistoryEntry itemChangeType(ItemChangeTypeEnum itemChangeType) {
    this.itemChangeType = itemChangeType;
    return this;
  }

  /**
   * The change made to the item from this change list (only relevant for File history, not folders)
   *
   * @return itemChangeType
   **/
  @ApiModelProperty(value = "The change made to the item from this change list (only relevant for File history, not folders)")
  public ItemChangeTypeEnum getItemChangeType() {
    return itemChangeType;
  }

  public void setItemChangeType(ItemChangeTypeEnum itemChangeType) {
    this.itemChangeType = itemChangeType;
  }

  public HistoryEntry serverItem(String serverItem) {
    this.serverItem = serverItem;
    return this;
  }

  /**
   * The path of the item at this point in history (only relevant for File history, not folders)
   *
   * @return serverItem
   **/
  @ApiModelProperty(value = "The path of the item at this point in history (only relevant for File history, not folders)")
  public String getServerItem() {
    return serverItem;
  }

  public void setServerItem(String serverItem) {
    this.serverItem = serverItem;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HistoryEntry historyEntry = (HistoryEntry) o;
    return Objects.equals(this.changeList, historyEntry.changeList) &&
            Objects.equals(this.itemChangeType, historyEntry.itemChangeType) &&
            Objects.equals(this.serverItem, historyEntry.serverItem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changeList, itemChangeType, serverItem);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HistoryEntry {\n");

    sb.append("    changeList: ").append(toIndentedString(changeList)).append("\n");
    sb.append("    itemChangeType: ").append(toIndentedString(itemChangeType)).append("\n");
    sb.append("    serverItem: ").append(toIndentedString(serverItem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * The change made to the item from this change list (only relevant for File history, not folders)
   */
  public enum ItemChangeTypeEnum {
    NONE("none"),

    ADD("add"),

    EDIT("edit"),

    ENCODING("encoding"),

    RENAME("rename"),

    DELETE("delete"),

    UNDELETE("undelete"),

    BRANCH("branch"),

    MERGE("merge"),

    LOCK("lock"),

    ROLLBACK("rollback"),

    SOURCERENAME("sourceRename"),

    TARGETRENAME("targetRename"),

    PROPERTY("property"),

    ALL("all");

    private String value;

    ItemChangeTypeEnum(String value) {
      this.value = value;
    }

    @JsonCreator
    public static ItemChangeTypeEnum fromValue(String value) {
      for (ItemChangeTypeEnum b : ItemChangeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

}

