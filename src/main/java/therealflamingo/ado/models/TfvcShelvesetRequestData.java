/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class TfvcShelvesetRequestData {
  @JsonProperty("includeDetails")
  private Boolean includeDetails = null;

  @JsonProperty("includeLinks")
  private Boolean includeLinks = null;

  @JsonProperty("includeWorkItems")
  private Boolean includeWorkItems = null;

  @JsonProperty("maxChangeCount")
  private Integer maxChangeCount = null;

  @JsonProperty("maxCommentLength")
  private Integer maxCommentLength = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("owner")
  private String owner = null;

  public TfvcShelvesetRequestData includeDetails(Boolean includeDetails) {
    this.includeDetails = includeDetails;
    return this;
  }

   /**
   * Whether to include policyOverride and notes Only applies when requesting a single deep shelveset
   * @return includeDetails
  **/
  @ApiModelProperty(value = "Whether to include policyOverride and notes Only applies when requesting a single deep shelveset")
  public Boolean isIncludeDetails() {
    return includeDetails;
  }

  public void setIncludeDetails(Boolean includeDetails) {
    this.includeDetails = includeDetails;
  }

  public TfvcShelvesetRequestData includeLinks(Boolean includeLinks) {
    this.includeLinks = includeLinks;
    return this;
  }

   /**
   * Whether to include the _links field on the shallow references. Does not apply when requesting a single deep shelveset object. Links will always be included in the deep shelveset.
   * @return includeLinks
  **/
  @ApiModelProperty(value = "Whether to include the _links field on the shallow references. Does not apply when requesting a single deep shelveset object. Links will always be included in the deep shelveset.")
  public Boolean isIncludeLinks() {
    return includeLinks;
  }

  public void setIncludeLinks(Boolean includeLinks) {
    this.includeLinks = includeLinks;
  }

  public TfvcShelvesetRequestData includeWorkItems(Boolean includeWorkItems) {
    this.includeWorkItems = includeWorkItems;
    return this;
  }

   /**
   * Whether to include workItems
   * @return includeWorkItems
  **/
  @ApiModelProperty(value = "Whether to include workItems")
  public Boolean isIncludeWorkItems() {
    return includeWorkItems;
  }

  public void setIncludeWorkItems(Boolean includeWorkItems) {
    this.includeWorkItems = includeWorkItems;
  }

  public TfvcShelvesetRequestData maxChangeCount(Integer maxChangeCount) {
    this.maxChangeCount = maxChangeCount;
    return this;
  }

   /**
   * Max number of changes to include
   * @return maxChangeCount
  **/
  @ApiModelProperty(value = "Max number of changes to include")
  public Integer getMaxChangeCount() {
    return maxChangeCount;
  }

  public void setMaxChangeCount(Integer maxChangeCount) {
    this.maxChangeCount = maxChangeCount;
  }

  public TfvcShelvesetRequestData maxCommentLength(Integer maxCommentLength) {
    this.maxCommentLength = maxCommentLength;
    return this;
  }

   /**
   * Max length of comment
   * @return maxCommentLength
  **/
  @ApiModelProperty(value = "Max length of comment")
  public Integer getMaxCommentLength() {
    return maxCommentLength;
  }

  public void setMaxCommentLength(Integer maxCommentLength) {
    this.maxCommentLength = maxCommentLength;
  }

  public TfvcShelvesetRequestData name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Shelveset name
   * @return name
  **/
  @ApiModelProperty(value = "Shelveset name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TfvcShelvesetRequestData owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Owner&#39;s ID. Could be a name or a guid.
   * @return owner
  **/
  @ApiModelProperty(value = "Owner's ID. Could be a name or a guid.")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TfvcShelvesetRequestData tfvcShelvesetRequestData = (TfvcShelvesetRequestData) o;
    return Objects.equals(this.includeDetails, tfvcShelvesetRequestData.includeDetails) &&
        Objects.equals(this.includeLinks, tfvcShelvesetRequestData.includeLinks) &&
        Objects.equals(this.includeWorkItems, tfvcShelvesetRequestData.includeWorkItems) &&
        Objects.equals(this.maxChangeCount, tfvcShelvesetRequestData.maxChangeCount) &&
        Objects.equals(this.maxCommentLength, tfvcShelvesetRequestData.maxCommentLength) &&
        Objects.equals(this.name, tfvcShelvesetRequestData.name) &&
        Objects.equals(this.owner, tfvcShelvesetRequestData.owner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(includeDetails, includeLinks, includeWorkItems, maxChangeCount, maxCommentLength, name, owner);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TfvcShelvesetRequestData {\n");
    
    sb.append("    includeDetails: ").append(toIndentedString(includeDetails)).append("\n");
    sb.append("    includeLinks: ").append(toIndentedString(includeLinks)).append("\n");
    sb.append("    includeWorkItems: ").append(toIndentedString(includeWorkItems)).append("\n");
    sb.append("    maxChangeCount: ").append(toIndentedString(maxChangeCount)).append("\n");
    sb.append("    maxCommentLength: ").append(toIndentedString(maxCommentLength)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

