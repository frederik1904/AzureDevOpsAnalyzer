/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import therealflamingo.ado.models.AssociatedWorkItem;
import therealflamingo.ado.models.CheckinNote;
import therealflamingo.ado.models.IdentityRef;
import therealflamingo.ado.models.ReferenceLinks;
import therealflamingo.ado.models.TfvcChange;
import therealflamingo.ado.models.TfvcChangesetRef;
import therealflamingo.ado.models.TfvcPolicyOverrideInfo;

/**
 * A collection of changes.
 */
@ApiModel(description = "A collection of changes.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class TfvcChangeset extends TfvcChangesetRef {
  @JsonProperty("_links")
  private ReferenceLinks links = null;

  @JsonProperty("author")
  private IdentityRef author = null;

  @JsonProperty("changesetId")
  private Integer changesetId = null;

  @JsonProperty("checkedInBy")
  private IdentityRef checkedInBy = null;

  @JsonProperty("comment")
  private String comment = null;

  @JsonProperty("commentTruncated")
  private Boolean commentTruncated = null;

  @JsonProperty("createdDate")
  private OffsetDateTime createdDate = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("accountId")
  private UUID accountId = null;

  @JsonProperty("changes")
  private List<TfvcChange> changes = null;

  @JsonProperty("checkinNotes")
  private List<CheckinNote> checkinNotes = null;

  @JsonProperty("collectionId")
  private UUID collectionId = null;

  @JsonProperty("hasMoreChanges")
  private Boolean hasMoreChanges = null;

  @JsonProperty("policyOverride")
  private TfvcPolicyOverrideInfo policyOverride = null;

  @JsonProperty("teamProjectIds")
  private List<UUID> teamProjectIds = null;

  @JsonProperty("workItems")
  private List<AssociatedWorkItem> workItems = null;

  public TfvcChangeset links(ReferenceLinks links) {
    this.links = links;
    return this;
  }

   /**
   * A collection of REST reference links.
   * @return links
  **/
  @ApiModelProperty(value = "A collection of REST reference links.")
  public ReferenceLinks getLinks() {
    return links;
  }

  public void setLinks(ReferenceLinks links) {
    this.links = links;
  }

  public TfvcChangeset author(IdentityRef author) {
    this.author = author;
    return this;
  }

   /**
   * Alias or display name of user.
   * @return author
  **/
  @ApiModelProperty(value = "Alias or display name of user.")
  public IdentityRef getAuthor() {
    return author;
  }

  public void setAuthor(IdentityRef author) {
    this.author = author;
  }

  public TfvcChangeset changesetId(Integer changesetId) {
    this.changesetId = changesetId;
    return this;
  }

   /**
   * Changeset Id.
   * @return changesetId
  **/
  @ApiModelProperty(value = "Changeset Id.")
  public Integer getChangesetId() {
    return changesetId;
  }

  public void setChangesetId(Integer changesetId) {
    this.changesetId = changesetId;
  }

  public TfvcChangeset checkedInBy(IdentityRef checkedInBy) {
    this.checkedInBy = checkedInBy;
    return this;
  }

   /**
   * Alias or display name of user.
   * @return checkedInBy
  **/
  @ApiModelProperty(value = "Alias or display name of user.")
  public IdentityRef getCheckedInBy() {
    return checkedInBy;
  }

  public void setCheckedInBy(IdentityRef checkedInBy) {
    this.checkedInBy = checkedInBy;
  }

  public TfvcChangeset comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Comment for the changeset.
   * @return comment
  **/
  @ApiModelProperty(value = "Comment for the changeset.")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public TfvcChangeset commentTruncated(Boolean commentTruncated) {
    this.commentTruncated = commentTruncated;
    return this;
  }

   /**
   * Was the Comment result truncated?
   * @return commentTruncated
  **/
  @ApiModelProperty(value = "Was the Comment result truncated?")
  public Boolean isCommentTruncated() {
    return commentTruncated;
  }

  public void setCommentTruncated(Boolean commentTruncated) {
    this.commentTruncated = commentTruncated;
  }

  public TfvcChangeset createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Creation date of the changeset.
   * @return createdDate
  **/
  @ApiModelProperty(value = "Creation date of the changeset.")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public TfvcChangeset url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL to retrieve the item.
   * @return url
  **/
  @ApiModelProperty(value = "URL to retrieve the item.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public TfvcChangeset accountId(UUID accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Changeset Account Id also known as Organization Id.
   * @return accountId
  **/
  @ApiModelProperty(value = "Changeset Account Id also known as Organization Id.")
  public UUID getAccountId() {
    return accountId;
  }

  public void setAccountId(UUID accountId) {
    this.accountId = accountId;
  }

  public TfvcChangeset changes(List<TfvcChange> changes) {
    this.changes = changes;
    return this;
  }

  public TfvcChangeset addChangesItem(TfvcChange changesItem) {
    if (this.changes == null) {
      this.changes = new ArrayList<TfvcChange>();
    }
    this.changes.add(changesItem);
    return this;
  }

   /**
   * List of associated changes.
   * @return changes
  **/
  @ApiModelProperty(value = "List of associated changes.")
  public List<TfvcChange> getChanges() {
    return changes;
  }

  public void setChanges(List<TfvcChange> changes) {
    this.changes = changes;
  }

  public TfvcChangeset checkinNotes(List<CheckinNote> checkinNotes) {
    this.checkinNotes = checkinNotes;
    return this;
  }

  public TfvcChangeset addCheckinNotesItem(CheckinNote checkinNotesItem) {
    if (this.checkinNotes == null) {
      this.checkinNotes = new ArrayList<CheckinNote>();
    }
    this.checkinNotes.add(checkinNotesItem);
    return this;
  }

   /**
   * List of Checkin Notes for the changeset.
   * @return checkinNotes
  **/
  @ApiModelProperty(value = "List of Checkin Notes for the changeset.")
  public List<CheckinNote> getCheckinNotes() {
    return checkinNotes;
  }

  public void setCheckinNotes(List<CheckinNote> checkinNotes) {
    this.checkinNotes = checkinNotes;
  }

  public TfvcChangeset collectionId(UUID collectionId) {
    this.collectionId = collectionId;
    return this;
  }

   /**
   * Changeset collection Id.
   * @return collectionId
  **/
  @ApiModelProperty(value = "Changeset collection Id.")
  public UUID getCollectionId() {
    return collectionId;
  }

  public void setCollectionId(UUID collectionId) {
    this.collectionId = collectionId;
  }

  public TfvcChangeset hasMoreChanges(Boolean hasMoreChanges) {
    this.hasMoreChanges = hasMoreChanges;
    return this;
  }

   /**
   * True if more changes are available.
   * @return hasMoreChanges
  **/
  @ApiModelProperty(value = "True if more changes are available.")
  public Boolean isHasMoreChanges() {
    return hasMoreChanges;
  }

  public void setHasMoreChanges(Boolean hasMoreChanges) {
    this.hasMoreChanges = hasMoreChanges;
  }

  public TfvcChangeset policyOverride(TfvcPolicyOverrideInfo policyOverride) {
    this.policyOverride = policyOverride;
    return this;
  }

   /**
   * Policy Override for the changeset.
   * @return policyOverride
  **/
  @ApiModelProperty(value = "Policy Override for the changeset.")
  public TfvcPolicyOverrideInfo getPolicyOverride() {
    return policyOverride;
  }

  public void setPolicyOverride(TfvcPolicyOverrideInfo policyOverride) {
    this.policyOverride = policyOverride;
  }

  public TfvcChangeset teamProjectIds(List<UUID> teamProjectIds) {
    this.teamProjectIds = teamProjectIds;
    return this;
  }

  public TfvcChangeset addTeamProjectIdsItem(UUID teamProjectIdsItem) {
    if (this.teamProjectIds == null) {
      this.teamProjectIds = new ArrayList<UUID>();
    }
    this.teamProjectIds.add(teamProjectIdsItem);
    return this;
  }

   /**
   * Team Project Ids for the changeset.
   * @return teamProjectIds
  **/
  @ApiModelProperty(value = "Team Project Ids for the changeset.")
  public List<UUID> getTeamProjectIds() {
    return teamProjectIds;
  }

  public void setTeamProjectIds(List<UUID> teamProjectIds) {
    this.teamProjectIds = teamProjectIds;
  }

  public TfvcChangeset workItems(List<AssociatedWorkItem> workItems) {
    this.workItems = workItems;
    return this;
  }

  public TfvcChangeset addWorkItemsItem(AssociatedWorkItem workItemsItem) {
    if (this.workItems == null) {
      this.workItems = new ArrayList<AssociatedWorkItem>();
    }
    this.workItems.add(workItemsItem);
    return this;
  }

   /**
   * List of work items associated with the changeset.
   * @return workItems
  **/
  @ApiModelProperty(value = "List of work items associated with the changeset.")
  public List<AssociatedWorkItem> getWorkItems() {
    return workItems;
  }

  public void setWorkItems(List<AssociatedWorkItem> workItems) {
    this.workItems = workItems;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TfvcChangeset tfvcChangeset = (TfvcChangeset) o;
    return Objects.equals(this.links, tfvcChangeset.links) &&
        Objects.equals(this.author, tfvcChangeset.author) &&
        Objects.equals(this.changesetId, tfvcChangeset.changesetId) &&
        Objects.equals(this.checkedInBy, tfvcChangeset.checkedInBy) &&
        Objects.equals(this.comment, tfvcChangeset.comment) &&
        Objects.equals(this.commentTruncated, tfvcChangeset.commentTruncated) &&
        Objects.equals(this.createdDate, tfvcChangeset.createdDate) &&
        Objects.equals(this.url, tfvcChangeset.url) &&
        Objects.equals(this.accountId, tfvcChangeset.accountId) &&
        Objects.equals(this.changes, tfvcChangeset.changes) &&
        Objects.equals(this.checkinNotes, tfvcChangeset.checkinNotes) &&
        Objects.equals(this.collectionId, tfvcChangeset.collectionId) &&
        Objects.equals(this.hasMoreChanges, tfvcChangeset.hasMoreChanges) &&
        Objects.equals(this.policyOverride, tfvcChangeset.policyOverride) &&
        Objects.equals(this.teamProjectIds, tfvcChangeset.teamProjectIds) &&
        Objects.equals(this.workItems, tfvcChangeset.workItems) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, author, changesetId, checkedInBy, comment, commentTruncated, createdDate, url, accountId, changes, checkinNotes, collectionId, hasMoreChanges, policyOverride, teamProjectIds, workItems, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TfvcChangeset {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    changesetId: ").append(toIndentedString(changesetId)).append("\n");
    sb.append("    checkedInBy: ").append(toIndentedString(checkedInBy)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    commentTruncated: ").append(toIndentedString(commentTruncated)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    changes: ").append(toIndentedString(changes)).append("\n");
    sb.append("    checkinNotes: ").append(toIndentedString(checkinNotes)).append("\n");
    sb.append("    collectionId: ").append(toIndentedString(collectionId)).append("\n");
    sb.append("    hasMoreChanges: ").append(toIndentedString(hasMoreChanges)).append("\n");
    sb.append("    policyOverride: ").append(toIndentedString(policyOverride)).append("\n");
    sb.append("    teamProjectIds: ").append(toIndentedString(teamProjectIds)).append("\n");
    sb.append("    workItems: ").append(toIndentedString(workItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

