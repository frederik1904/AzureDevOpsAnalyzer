/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/**
 * A set of pull request queries and their results.
 */
@ApiModel(description = "A set of pull request queries and their results.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class GitPullRequestQuery {
    @JsonProperty("queries")
    private List<GitPullRequestQueryInput> queries = null;

    @JsonProperty("results")
    private List<Map<String, List<GitPullRequest>>> results = null;

    public GitPullRequestQuery queries(List<GitPullRequestQueryInput> queries) {
        this.queries = queries;
        return this;
    }

    public GitPullRequestQuery addQueriesItem(GitPullRequestQueryInput queriesItem) {
        if (this.queries == null) {
            this.queries = new ArrayList<GitPullRequestQueryInput>();
        }
        this.queries.add(queriesItem);
        return this;
    }

    /**
     * The queries to perform.
     *
     * @return queries
     **/
    @ApiModelProperty(value = "The queries to perform.")
    public List<GitPullRequestQueryInput> getQueries() {
        return queries;
    }

    public void setQueries(List<GitPullRequestQueryInput> queries) {
        this.queries = queries;
    }

    public GitPullRequestQuery results(List<Map<String, List<GitPullRequest>>> results) {
        this.results = results;
        return this;
    }

    public GitPullRequestQuery addResultsItem(Map<String, List<GitPullRequest>> resultsItem) {
        if (this.results == null) {
            this.results = new ArrayList<Map<String, List<GitPullRequest>>>();
        }
        this.results.add(resultsItem);
        return this;
    }

    /**
     * The results of the queries. This matches the QueryInputs list so Results[n] are the results of QueryInputs[n]. Each entry in the list is a dictionary of commit-&gt;pull requests.
     *
     * @return results
     **/
    @ApiModelProperty(value = "The results of the queries. This matches the QueryInputs list so Results[n] are the results of QueryInputs[n]. Each entry in the list is a dictionary of commit->pull requests.")
    public List<Map<String, List<GitPullRequest>>> getResults() {
        return results;
    }

    public void setResults(List<Map<String, List<GitPullRequest>>> results) {
        this.results = results;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GitPullRequestQuery gitPullRequestQuery = (GitPullRequestQuery) o;
        return Objects.equals(this.queries, gitPullRequestQuery.queries) &&
                Objects.equals(this.results, gitPullRequestQuery.results);
    }

    @Override
    public int hashCode() {
        return Objects.hash(queries, results);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GitPullRequestQuery {\n");

        sb.append("    queries: ").append(toIndentedString(queries)).append("\n");
        sb.append("    results: ").append(toIndentedString(results)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

