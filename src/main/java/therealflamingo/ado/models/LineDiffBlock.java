/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * The class to represent the line diff block
 */
@ApiModel(description = "The class to represent the line diff block")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class LineDiffBlock {
  @JsonProperty("changeType")
  private ChangeTypeEnum changeType = null;
  @JsonProperty("modifiedLineNumberStart")
  private Integer modifiedLineNumberStart = null;
  @JsonProperty("modifiedLinesCount")
  private Integer modifiedLinesCount = null;
  @JsonProperty("originalLineNumberStart")
  private Integer originalLineNumberStart = null;
  @JsonProperty("originalLinesCount")
  private Integer originalLinesCount = null;

  public LineDiffBlock changeType(ChangeTypeEnum changeType) {
    this.changeType = changeType;
    return this;
  }

  /**
   * Type of change that was made to the block.
   *
   * @return changeType
   **/
  @ApiModelProperty(value = "Type of change that was made to the block.")
  public ChangeTypeEnum getChangeType() {
    return changeType;
  }

  public void setChangeType(ChangeTypeEnum changeType) {
    this.changeType = changeType;
  }

  public LineDiffBlock modifiedLineNumberStart(Integer modifiedLineNumberStart) {
    this.modifiedLineNumberStart = modifiedLineNumberStart;
    return this;
  }

  /**
   * Line number where this block starts in modified file.
   *
   * @return modifiedLineNumberStart
   **/
  @ApiModelProperty(value = "Line number where this block starts in modified file.")
  public Integer getModifiedLineNumberStart() {
    return modifiedLineNumberStart;
  }

  public void setModifiedLineNumberStart(Integer modifiedLineNumberStart) {
    this.modifiedLineNumberStart = modifiedLineNumberStart;
  }

  public LineDiffBlock modifiedLinesCount(Integer modifiedLinesCount) {
    this.modifiedLinesCount = modifiedLinesCount;
    return this;
  }

  /**
   * Count of lines in this block in modified file.
   *
   * @return modifiedLinesCount
   **/
  @ApiModelProperty(value = "Count of lines in this block in modified file.")
  public Integer getModifiedLinesCount() {
    return modifiedLinesCount;
  }

  public void setModifiedLinesCount(Integer modifiedLinesCount) {
    this.modifiedLinesCount = modifiedLinesCount;
  }

  public LineDiffBlock originalLineNumberStart(Integer originalLineNumberStart) {
    this.originalLineNumberStart = originalLineNumberStart;
    return this;
  }

  /**
   * Line number where this block starts in original file.
   *
   * @return originalLineNumberStart
   **/
  @ApiModelProperty(value = "Line number where this block starts in original file.")
  public Integer getOriginalLineNumberStart() {
    return originalLineNumberStart;
  }

  public void setOriginalLineNumberStart(Integer originalLineNumberStart) {
    this.originalLineNumberStart = originalLineNumberStart;
  }

  public LineDiffBlock originalLinesCount(Integer originalLinesCount) {
    this.originalLinesCount = originalLinesCount;
    return this;
  }

  /**
   * Count of lines in this block in original file.
   *
   * @return originalLinesCount
   **/
  @ApiModelProperty(value = "Count of lines in this block in original file.")
  public Integer getOriginalLinesCount() {
    return originalLinesCount;
  }

  public void setOriginalLinesCount(Integer originalLinesCount) {
    this.originalLinesCount = originalLinesCount;
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LineDiffBlock lineDiffBlock = (LineDiffBlock) o;
    return Objects.equals(this.changeType, lineDiffBlock.changeType) &&
            Objects.equals(this.modifiedLineNumberStart, lineDiffBlock.modifiedLineNumberStart) &&
            Objects.equals(this.modifiedLinesCount, lineDiffBlock.modifiedLinesCount) &&
            Objects.equals(this.originalLineNumberStart, lineDiffBlock.originalLineNumberStart) &&
            Objects.equals(this.originalLinesCount, lineDiffBlock.originalLinesCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changeType, modifiedLineNumberStart, modifiedLinesCount, originalLineNumberStart, originalLinesCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LineDiffBlock {\n");

    sb.append("    changeType: ").append(toIndentedString(changeType)).append("\n");
    sb.append("    modifiedLineNumberStart: ").append(toIndentedString(modifiedLineNumberStart)).append("\n");
    sb.append("    modifiedLinesCount: ").append(toIndentedString(modifiedLinesCount)).append("\n");
    sb.append("    originalLineNumberStart: ").append(toIndentedString(originalLineNumberStart)).append("\n");
    sb.append("    originalLinesCount: ").append(toIndentedString(originalLinesCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Type of change that was made to the block.
   */
  public enum ChangeTypeEnum {
    NONE("none"),

    ADD("add"),

    DELETE("delete"),

    EDIT("edit");

    private String value;

    ChangeTypeEnum(String value) {
      this.value = value;
    }

    @JsonCreator
    public static ChangeTypeEnum fromValue(String value) {
      for (ChangeTypeEnum b : ChangeTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

}

