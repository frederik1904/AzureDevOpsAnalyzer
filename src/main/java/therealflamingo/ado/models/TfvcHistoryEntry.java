/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import therealflamingo.ado.models.ChangeList;
import therealflamingo.ado.models.HistoryEntry;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class TfvcHistoryEntry extends HistoryEntry {
  @JsonProperty("changeList")
  private ChangeList changeList = null;

  @JsonProperty("serverItem")
  private String serverItem = null;

  @JsonProperty("encoding")
  private Integer encoding = null;

  @JsonProperty("fileId")
  private Integer fileId = null;

  public TfvcHistoryEntry changeList(ChangeList changeList) {
    this.changeList = changeList;
    return this;
  }

   /**
   * The Change list (changeset/commit/shelveset) for this point in history
   * @return changeList
  **/
  @ApiModelProperty(value = "The Change list (changeset/commit/shelveset) for this point in history")
  public ChangeList getChangeList() {
    return changeList;
  }

  public void setChangeList(ChangeList changeList) {
    this.changeList = changeList;
  }

  public TfvcHistoryEntry serverItem(String serverItem) {
    this.serverItem = serverItem;
    return this;
  }

   /**
   * The path of the item at this point in history (only relevant for File history, not folders)
   * @return serverItem
  **/
  @ApiModelProperty(value = "The path of the item at this point in history (only relevant for File history, not folders)")
  public String getServerItem() {
    return serverItem;
  }

  public void setServerItem(String serverItem) {
    this.serverItem = serverItem;
  }

  public TfvcHistoryEntry encoding(Integer encoding) {
    this.encoding = encoding;
    return this;
  }

   /**
   * The encoding of the item at this point in history (only relevant for File history, not folders)
   * @return encoding
  **/
  @ApiModelProperty(value = "The encoding of the item at this point in history (only relevant for File history, not folders)")
  public Integer getEncoding() {
    return encoding;
  }

  public void setEncoding(Integer encoding) {
    this.encoding = encoding;
  }

  public TfvcHistoryEntry fileId(Integer fileId) {
    this.fileId = fileId;
    return this;
  }

   /**
   * The file id of the item at this point in history (only relevant for File history, not folders)
   * @return fileId
  **/
  @ApiModelProperty(value = "The file id of the item at this point in history (only relevant for File history, not folders)")
  public Integer getFileId() {
    return fileId;
  }

  public void setFileId(Integer fileId) {
    this.fileId = fileId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TfvcHistoryEntry tfvcHistoryEntry = (TfvcHistoryEntry) o;
    return Objects.equals(this.changeList, tfvcHistoryEntry.changeList) &&
        Objects.equals(this.serverItem, tfvcHistoryEntry.serverItem) &&
        Objects.equals(this.encoding, tfvcHistoryEntry.encoding) &&
        Objects.equals(this.fileId, tfvcHistoryEntry.fileId) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changeList, serverItem, encoding, fileId, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TfvcHistoryEntry {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    changeList: ").append(toIndentedString(changeList)).append("\n");
    sb.append("    serverItem: ").append(toIndentedString(serverItem)).append("\n");
    sb.append("    encoding: ").append(toIndentedString(encoding)).append("\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

