/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Class representing a branch object.
 */
@ApiModel(description = "Class representing a branch object.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class TfvcBranch extends TfvcBranchRef {
  @JsonProperty("_links")
  private ReferenceLinks links = null;

  @JsonProperty("createdDate")
  private OffsetDateTime createdDate = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("isDeleted")
  private Boolean isDeleted = null;

  @JsonProperty("owner")
  private IdentityRef owner = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("path")
  private String path = null;

  @JsonProperty("children")
  private List<TfvcBranch> children = null;

  @JsonProperty("mappings")
  private List<TfvcBranchMapping> mappings = null;

  @JsonProperty("parent")
  private TfvcShallowBranchRef parent = null;

  @JsonProperty("relatedBranches")
  private List<TfvcShallowBranchRef> relatedBranches = null;

  public TfvcBranch links(ReferenceLinks links) {
    this.links = links;
    return this;
  }

  /**
   * A collection of REST reference links.
   *
   * @return links
   **/
  @ApiModelProperty(value = "A collection of REST reference links.")
  public ReferenceLinks getLinks() {
    return links;
  }

  public void setLinks(ReferenceLinks links) {
    this.links = links;
  }

  public TfvcBranch createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Creation date of the branch.
   *
   * @return createdDate
   **/
  @ApiModelProperty(value = "Creation date of the branch.")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public TfvcBranch description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Branch description.
   *
   * @return description
   **/
  @ApiModelProperty(value = "Branch description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TfvcBranch isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Is the branch deleted?
   *
   * @return isDeleted
   **/
  @ApiModelProperty(value = "Is the branch deleted?")
  public Boolean isIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  public TfvcBranch owner(IdentityRef owner) {
    this.owner = owner;
    return this;
  }

  /**
   * Alias or display name of user
   *
   * @return owner
   **/
  @ApiModelProperty(value = "Alias or display name of user")
  public IdentityRef getOwner() {
    return owner;
  }

  public void setOwner(IdentityRef owner) {
    this.owner = owner;
  }

  public TfvcBranch url(String url) {
    this.url = url;
    return this;
  }

  /**
   * URL to retrieve the item.
   *
   * @return url
   **/
  @ApiModelProperty(value = "URL to retrieve the item.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public TfvcBranch path(String path) {
    this.path = path;
    return this;
  }

  /**
   * Path for the branch.
   *
   * @return path
   **/
  @ApiModelProperty(value = "Path for the branch.")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public TfvcBranch children(List<TfvcBranch> children) {
    this.children = children;
    return this;
  }

  public TfvcBranch addChildrenItem(TfvcBranch childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<TfvcBranch>();
    }
    this.children.add(childrenItem);
    return this;
  }

  /**
   * List of children for the branch.
   *
   * @return children
   **/
  @ApiModelProperty(value = "List of children for the branch.")
  public List<TfvcBranch> getChildren() {
    return children;
  }

  public void setChildren(List<TfvcBranch> children) {
    this.children = children;
  }

  public TfvcBranch mappings(List<TfvcBranchMapping> mappings) {
    this.mappings = mappings;
    return this;
  }

  public TfvcBranch addMappingsItem(TfvcBranchMapping mappingsItem) {
    if (this.mappings == null) {
      this.mappings = new ArrayList<TfvcBranchMapping>();
    }
    this.mappings.add(mappingsItem);
    return this;
  }

  /**
   * List of branch mappings.
   *
   * @return mappings
   **/
  @ApiModelProperty(value = "List of branch mappings.")
  public List<TfvcBranchMapping> getMappings() {
    return mappings;
  }

  public void setMappings(List<TfvcBranchMapping> mappings) {
    this.mappings = mappings;
  }

  public TfvcBranch parent(TfvcShallowBranchRef parent) {
    this.parent = parent;
    return this;
  }

  /**
   * Path of the branch&#39;s parent.
   *
   * @return parent
   **/
  @ApiModelProperty(value = "Path of the branch's parent.")
  public TfvcShallowBranchRef getParent() {
    return parent;
  }

  public void setParent(TfvcShallowBranchRef parent) {
    this.parent = parent;
  }

  public TfvcBranch relatedBranches(List<TfvcShallowBranchRef> relatedBranches) {
    this.relatedBranches = relatedBranches;
    return this;
  }

  public TfvcBranch addRelatedBranchesItem(TfvcShallowBranchRef relatedBranchesItem) {
    if (this.relatedBranches == null) {
      this.relatedBranches = new ArrayList<TfvcShallowBranchRef>();
    }
    this.relatedBranches.add(relatedBranchesItem);
    return this;
  }

  /**
   * List of paths of the related branches.
   *
   * @return relatedBranches
   **/
  @ApiModelProperty(value = "List of paths of the related branches.")
  public List<TfvcShallowBranchRef> getRelatedBranches() {
    return relatedBranches;
  }

  public void setRelatedBranches(List<TfvcShallowBranchRef> relatedBranches) {
    this.relatedBranches = relatedBranches;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TfvcBranch tfvcBranch = (TfvcBranch) o;
    return Objects.equals(this.links, tfvcBranch.links) &&
            Objects.equals(this.createdDate, tfvcBranch.createdDate) &&
            Objects.equals(this.description, tfvcBranch.description) &&
            Objects.equals(this.isDeleted, tfvcBranch.isDeleted) &&
            Objects.equals(this.owner, tfvcBranch.owner) &&
            Objects.equals(this.url, tfvcBranch.url) &&
            Objects.equals(this.path, tfvcBranch.path) &&
            Objects.equals(this.children, tfvcBranch.children) &&
            Objects.equals(this.mappings, tfvcBranch.mappings) &&
            Objects.equals(this.parent, tfvcBranch.parent) &&
            Objects.equals(this.relatedBranches, tfvcBranch.relatedBranches) &&
            super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, createdDate, description, isDeleted, owner, url, path, children, mappings, parent, relatedBranches, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TfvcBranch {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    mappings: ").append(toIndentedString(mappings)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    relatedBranches: ").append(toIndentedString(relatedBranches)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

