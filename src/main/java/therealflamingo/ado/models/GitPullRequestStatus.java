/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * This class contains the metadata of a service/extension posting pull request status. Status can be associated with a pull request or an iteration.
 */
@ApiModel(description = "This class contains the metadata of a service/extension posting pull request status. Status can be associated with a pull request or an iteration.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class GitPullRequestStatus extends GitStatus {
  @JsonProperty("_links")
  private ReferenceLinks links = null;

  @JsonProperty("context")
  private GitStatusContext context = null;

  @JsonProperty("createdBy")
  private IdentityRef createdBy = null;

  @JsonProperty("creationDate")
  private OffsetDateTime creationDate = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("targetUrl")
  private String targetUrl = null;

  @JsonProperty("updatedDate")
  private OffsetDateTime updatedDate = null;

  @JsonProperty("iterationId")
  private Integer iterationId = null;

  @JsonProperty("properties")
  private PropertiesCollection properties = null;

  public GitPullRequestStatus links(ReferenceLinks links) {
    this.links = links;
    return this;
  }

  /**
   * Reference links.
   *
   * @return links
   **/
  @ApiModelProperty(value = "Reference links.")
  public ReferenceLinks getLinks() {
    return links;
  }

  public void setLinks(ReferenceLinks links) {
    this.links = links;
  }

  public GitPullRequestStatus context(GitStatusContext context) {
    this.context = context;
    return this;
  }

  /**
   * Context of the status.
   *
   * @return context
   **/
  @ApiModelProperty(value = "Context of the status.")
  public GitStatusContext getContext() {
    return context;
  }

  public void setContext(GitStatusContext context) {
    this.context = context;
  }

  public GitPullRequestStatus createdBy(IdentityRef createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Identity that created the status.
   *
   * @return createdBy
   **/
  @ApiModelProperty(value = "Identity that created the status.")
  public IdentityRef getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(IdentityRef createdBy) {
    this.createdBy = createdBy;
  }

  public GitPullRequestStatus creationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Creation date and time of the status.
   *
   * @return creationDate
   **/
  @ApiModelProperty(value = "Creation date and time of the status.")
  public OffsetDateTime getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public GitPullRequestStatus description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Status description. Typically describes current state of the status.
   *
   * @return description
   **/
  @ApiModelProperty(value = "Status description. Typically describes current state of the status.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public GitPullRequestStatus id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Status identifier.
   *
   * @return id
   **/
  @ApiModelProperty(value = "Status identifier.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public GitPullRequestStatus targetUrl(String targetUrl) {
    this.targetUrl = targetUrl;
    return this;
  }

  /**
   * URL with status details.
   *
   * @return targetUrl
   **/
  @ApiModelProperty(value = "URL with status details.")
  public String getTargetUrl() {
    return targetUrl;
  }

  public void setTargetUrl(String targetUrl) {
    this.targetUrl = targetUrl;
  }

  public GitPullRequestStatus updatedDate(OffsetDateTime updatedDate) {
    this.updatedDate = updatedDate;
    return this;
  }

  /**
   * Last update date and time of the status.
   *
   * @return updatedDate
   **/
  @ApiModelProperty(value = "Last update date and time of the status.")
  public OffsetDateTime getUpdatedDate() {
    return updatedDate;
  }

  public void setUpdatedDate(OffsetDateTime updatedDate) {
    this.updatedDate = updatedDate;
  }

  public GitPullRequestStatus iterationId(Integer iterationId) {
    this.iterationId = iterationId;
    return this;
  }

  /**
   * ID of the iteration to associate status with. Minimum value is 1.
   *
   * @return iterationId
   **/
  @ApiModelProperty(value = "ID of the iteration to associate status with. Minimum value is 1.")
  public Integer getIterationId() {
    return iterationId;
  }

  public void setIterationId(Integer iterationId) {
    this.iterationId = iterationId;
  }

  public GitPullRequestStatus properties(PropertiesCollection properties) {
    this.properties = properties;
    return this;
  }

  /**
   * Custom properties of the status.
   *
   * @return properties
   **/
  @ApiModelProperty(value = "Custom properties of the status.")
  public PropertiesCollection getProperties() {
    return properties;
  }

  public void setProperties(PropertiesCollection properties) {
    this.properties = properties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GitPullRequestStatus gitPullRequestStatus = (GitPullRequestStatus) o;
    return Objects.equals(this.links, gitPullRequestStatus.links) &&
            Objects.equals(this.context, gitPullRequestStatus.context) &&
            Objects.equals(this.createdBy, gitPullRequestStatus.createdBy) &&
            Objects.equals(this.creationDate, gitPullRequestStatus.creationDate) &&
            Objects.equals(this.description, gitPullRequestStatus.description) &&
            Objects.equals(this.id, gitPullRequestStatus.id) &&
            Objects.equals(this.targetUrl, gitPullRequestStatus.targetUrl) &&
            Objects.equals(this.updatedDate, gitPullRequestStatus.updatedDate) &&
            Objects.equals(this.iterationId, gitPullRequestStatus.iterationId) &&
            Objects.equals(this.properties, gitPullRequestStatus.properties) &&
            super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, context, createdBy, creationDate, description, id, targetUrl, updatedDate, iterationId, properties, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GitPullRequestStatus {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    targetUrl: ").append(toIndentedString(targetUrl)).append("\n");
    sb.append("    updatedDate: ").append(toIndentedString(updatedDate)).append("\n");
    sb.append("    iterationId: ").append(toIndentedString(iterationId)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

