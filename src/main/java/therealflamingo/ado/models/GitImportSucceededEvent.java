/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import therealflamingo.ado.models.GitRepository;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class GitImportSucceededEvent {
  @JsonProperty("sourceRepositoryName")
  private String sourceRepositoryName = null;

  @JsonProperty("targetRepository")
  private GitRepository targetRepository = null;

  public GitImportSucceededEvent sourceRepositoryName(String sourceRepositoryName) {
    this.sourceRepositoryName = sourceRepositoryName;
    return this;
  }

   /**
   * Get sourceRepositoryName
   * @return sourceRepositoryName
  **/
  @ApiModelProperty(value = "")
  public String getSourceRepositoryName() {
    return sourceRepositoryName;
  }

  public void setSourceRepositoryName(String sourceRepositoryName) {
    this.sourceRepositoryName = sourceRepositoryName;
  }

  public GitImportSucceededEvent targetRepository(GitRepository targetRepository) {
    this.targetRepository = targetRepository;
    return this;
  }

   /**
   * Get targetRepository
   * @return targetRepository
  **/
  @ApiModelProperty(value = "")
  public GitRepository getTargetRepository() {
    return targetRepository;
  }

  public void setTargetRepository(GitRepository targetRepository) {
    this.targetRepository = targetRepository;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GitImportSucceededEvent gitImportSucceededEvent = (GitImportSucceededEvent) o;
    return Objects.equals(this.sourceRepositoryName, gitImportSucceededEvent.sourceRepositoryName) &&
        Objects.equals(this.targetRepository, gitImportSucceededEvent.targetRepository);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceRepositoryName, targetRepository);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GitImportSucceededEvent {\n");
    
    sb.append("    sourceRepositoryName: ").append(toIndentedString(sourceRepositoryName)).append("\n");
    sb.append("    targetRepository: ").append(toIndentedString(targetRepository)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

