/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

/**
 * User info and date for Git operations.
 */
@ApiModel(description = "User info and date for Git operations.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class GitUserDate {
  @JsonProperty("date")
  private OffsetDateTime date = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("imageUrl")
  private String imageUrl = null;

  @JsonProperty("name")
  private String name = null;

  public GitUserDate date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Date of the Git operation.
   * @return date
  **/
  @ApiModelProperty(value = "Date of the Git operation.")
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }

  public GitUserDate email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email address of the user performing the Git operation.
   * @return email
  **/
  @ApiModelProperty(value = "Email address of the user performing the Git operation.")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public GitUserDate imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Url for the user&#39;s avatar.
   * @return imageUrl
  **/
  @ApiModelProperty(value = "Url for the user's avatar.")
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }

  public GitUserDate name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the user performing the Git operation.
   * @return name
  **/
  @ApiModelProperty(value = "Name of the user performing the Git operation.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GitUserDate gitUserDate = (GitUserDate) o;
    return Objects.equals(this.date, gitUserDate.date) &&
        Objects.equals(this.email, gitUserDate.email) &&
        Objects.equals(this.imageUrl, gitUserDate.imageUrl) &&
        Objects.equals(this.name, gitUserDate.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, email, imageUrl, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GitUserDate {\n");
    
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

