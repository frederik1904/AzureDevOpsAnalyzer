/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Git object identifier and type information.
 */
@ApiModel(description = "Git object identifier and type information.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class GitObject {
  @JsonProperty("objectId")
  private String objectId = null;

  /**
   * Type of object (Commit, Tree, Blob, Tag)
   */
  public enum ObjectTypeEnum {
    BAD("bad"),
    
    COMMIT("commit"),
    
    TREE("tree"),
    
    BLOB("blob"),
    
    TAG("tag"),
    
    EXT2("ext2"),
    
    OFSDELTA("ofsDelta"),
    
    REFDELTA("refDelta");

    private String value;

    ObjectTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ObjectTypeEnum fromValue(String value) {
      for (ObjectTypeEnum b : ObjectTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("objectType")
  private ObjectTypeEnum objectType = null;

  public GitObject objectId(String objectId) {
    this.objectId = objectId;
    return this;
  }

   /**
   * Object Id (Sha1Id).
   * @return objectId
  **/
  @ApiModelProperty(value = "Object Id (Sha1Id).")
  public String getObjectId() {
    return objectId;
  }

  public void setObjectId(String objectId) {
    this.objectId = objectId;
  }

  public GitObject objectType(ObjectTypeEnum objectType) {
    this.objectType = objectType;
    return this;
  }

   /**
   * Type of object (Commit, Tree, Blob, Tag)
   * @return objectType
  **/
  @ApiModelProperty(value = "Type of object (Commit, Tree, Blob, Tag)")
  public ObjectTypeEnum getObjectType() {
    return objectType;
  }

  public void setObjectType(ObjectTypeEnum objectType) {
    this.objectType = objectType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GitObject gitObject = (GitObject) o;
    return Objects.equals(this.objectId, gitObject.objectId) &&
        Objects.equals(this.objectType, gitObject.objectType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectId, objectType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GitObject {\n");
    
    sb.append("    objectId: ").append(toIndentedString(objectId)).append("\n");
    sb.append("    objectType: ").append(toIndentedString(objectType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

