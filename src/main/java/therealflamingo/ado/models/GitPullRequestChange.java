/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Change made in a pull request.
 */
@ApiModel(description = "Change made in a pull request.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class GitPullRequestChange extends GitChange {
    @JsonProperty("changeId")
    private Integer changeId = null;

    @JsonProperty("newContentTemplate")
    private GitTemplate newContentTemplate = null;

    @JsonProperty("originalPath")
    private String originalPath = null;

    @JsonProperty("changeType")
    private ChangeTypeEnum changeType = null;

    @JsonProperty("item")
    private String item = null;

    @JsonProperty("newContent")
    private ItemContent newContent = null;

    @JsonProperty("sourceServerItem")
    private String sourceServerItem = null;

    @JsonProperty("url")
    private String url = null;

    @JsonProperty("changeTrackingId")
    private Integer changeTrackingId = null;

    public GitPullRequestChange changeId(Integer changeId) {
        this.changeId = changeId;
        return this;
    }

    /**
     * ID of the change within the group of changes.
     *
     * @return changeId
     **/
    @ApiModelProperty(value = "ID of the change within the group of changes.")
    public Integer getChangeId() {
        return changeId;
    }

    public void setChangeId(Integer changeId) {
        this.changeId = changeId;
    }

    public GitPullRequestChange newContentTemplate(GitTemplate newContentTemplate) {
        this.newContentTemplate = newContentTemplate;
        return this;
    }

    /**
     * New Content template to be used when pushing new changes.
     *
     * @return newContentTemplate
     **/
    @ApiModelProperty(value = "New Content template to be used when pushing new changes.")
    public GitTemplate getNewContentTemplate() {
        return newContentTemplate;
    }

    public void setNewContentTemplate(GitTemplate newContentTemplate) {
        this.newContentTemplate = newContentTemplate;
    }

    public GitPullRequestChange originalPath(String originalPath) {
        this.originalPath = originalPath;
        return this;
    }

    /**
     * Original path of item if different from current path.
     *
     * @return originalPath
     **/
    @ApiModelProperty(value = "Original path of item if different from current path.")
    public String getOriginalPath() {
        return originalPath;
    }

    public void setOriginalPath(String originalPath) {
        this.originalPath = originalPath;
    }

    public GitPullRequestChange changeType(ChangeTypeEnum changeType) {
        this.changeType = changeType;
        return this;
    }

    /**
     * The type of change that was made to the item.
     *
     * @return changeType
     **/
    @ApiModelProperty(value = "The type of change that was made to the item.")
    public ChangeTypeEnum getChangeType() {
        return changeType;
    }

    public void setChangeType(ChangeTypeEnum changeType) {
        this.changeType = changeType;
    }

    public GitPullRequestChange item(String item) {
        this.item = item;
        return this;
    }

    /**
     * Current version.
     *
     * @return item
     **/
    @ApiModelProperty(value = "Current version.")
    public String getItem() {
        return item;
    }

    public void setItem(String item) {
        this.item = item;
    }

    public GitPullRequestChange newContent(ItemContent newContent) {
        this.newContent = newContent;
        return this;
    }

    /**
     * Content of the item after the change.
     *
     * @return newContent
     **/
    @ApiModelProperty(value = "Content of the item after the change.")
    public ItemContent getNewContent() {
        return newContent;
    }

    public void setNewContent(ItemContent newContent) {
        this.newContent = newContent;
    }

    public GitPullRequestChange sourceServerItem(String sourceServerItem) {
        this.sourceServerItem = sourceServerItem;
        return this;
    }

    /**
     * Path of the item on the server.
     *
     * @return sourceServerItem
     **/
    @ApiModelProperty(value = "Path of the item on the server.")
    public String getSourceServerItem() {
        return sourceServerItem;
    }

    public void setSourceServerItem(String sourceServerItem) {
        this.sourceServerItem = sourceServerItem;
    }

    public GitPullRequestChange url(String url) {
        this.url = url;
        return this;
    }

    /**
     * URL to retrieve the item.
     *
     * @return url
     **/
    @ApiModelProperty(value = "URL to retrieve the item.")
    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    public GitPullRequestChange changeTrackingId(Integer changeTrackingId) {
        this.changeTrackingId = changeTrackingId;
        return this;
    }

    /**
     * ID used to track files through multiple changes.
     *
     * @return changeTrackingId
     **/
    @ApiModelProperty(value = "ID used to track files through multiple changes.")
    public Integer getChangeTrackingId() {
        return changeTrackingId;
    }

    public void setChangeTrackingId(Integer changeTrackingId) {
        this.changeTrackingId = changeTrackingId;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GitPullRequestChange gitPullRequestChange = (GitPullRequestChange) o;
        return Objects.equals(this.changeId, gitPullRequestChange.changeId) &&
                Objects.equals(this.newContentTemplate, gitPullRequestChange.newContentTemplate) &&
                Objects.equals(this.originalPath, gitPullRequestChange.originalPath) &&
                Objects.equals(this.changeType, gitPullRequestChange.changeType) &&
                Objects.equals(this.item, gitPullRequestChange.item) &&
                Objects.equals(this.newContent, gitPullRequestChange.newContent) &&
                Objects.equals(this.sourceServerItem, gitPullRequestChange.sourceServerItem) &&
                Objects.equals(this.url, gitPullRequestChange.url) &&
                Objects.equals(this.changeTrackingId, gitPullRequestChange.changeTrackingId) &&
                super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(changeId, newContentTemplate, originalPath, changeType, item, newContent, sourceServerItem, url, changeTrackingId, super.hashCode());
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GitPullRequestChange {\n");
        sb.append("    ").append(toIndentedString(super.toString())).append("\n");
        sb.append("    changeId: ").append(toIndentedString(changeId)).append("\n");
        sb.append("    newContentTemplate: ").append(toIndentedString(newContentTemplate)).append("\n");
        sb.append("    originalPath: ").append(toIndentedString(originalPath)).append("\n");
        sb.append("    changeType: ").append(toIndentedString(changeType)).append("\n");
        sb.append("    item: ").append(toIndentedString(item)).append("\n");
        sb.append("    newContent: ").append(toIndentedString(newContent)).append("\n");
        sb.append("    sourceServerItem: ").append(toIndentedString(sourceServerItem)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    changeTrackingId: ").append(toIndentedString(changeTrackingId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

