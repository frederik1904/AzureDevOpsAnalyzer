/*
 * Git
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 7.2-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package therealflamingo.ado.models;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import therealflamingo.ado.models.CommentPosition;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-07-28T21:17:42.501+02:00")
public class CommentThreadContext {
  @JsonProperty("filePath")
  private String filePath = null;

  @JsonProperty("leftFileEnd")
  private CommentPosition leftFileEnd = null;

  @JsonProperty("leftFileStart")
  private CommentPosition leftFileStart = null;

  @JsonProperty("rightFileEnd")
  private CommentPosition rightFileEnd = null;

  @JsonProperty("rightFileStart")
  private CommentPosition rightFileStart = null;

  public CommentThreadContext filePath(String filePath) {
    this.filePath = filePath;
    return this;
  }

   /**
   * File path relative to the root of the repository. It&#39;s up to the client to use any path format.
   * @return filePath
  **/
  @ApiModelProperty(value = "File path relative to the root of the repository. It's up to the client to use any path format.")
  public String getFilePath() {
    return filePath;
  }

  public void setFilePath(String filePath) {
    this.filePath = filePath;
  }

  public CommentThreadContext leftFileEnd(CommentPosition leftFileEnd) {
    this.leftFileEnd = leftFileEnd;
    return this;
  }

   /**
   * Position of last character of the thread&#39;s span in left file.
   * @return leftFileEnd
  **/
  @ApiModelProperty(value = "Position of last character of the thread's span in left file.")
  public CommentPosition getLeftFileEnd() {
    return leftFileEnd;
  }

  public void setLeftFileEnd(CommentPosition leftFileEnd) {
    this.leftFileEnd = leftFileEnd;
  }

  public CommentThreadContext leftFileStart(CommentPosition leftFileStart) {
    this.leftFileStart = leftFileStart;
    return this;
  }

   /**
   * Position of first character of the thread&#39;s span in left file.
   * @return leftFileStart
  **/
  @ApiModelProperty(value = "Position of first character of the thread's span in left file.")
  public CommentPosition getLeftFileStart() {
    return leftFileStart;
  }

  public void setLeftFileStart(CommentPosition leftFileStart) {
    this.leftFileStart = leftFileStart;
  }

  public CommentThreadContext rightFileEnd(CommentPosition rightFileEnd) {
    this.rightFileEnd = rightFileEnd;
    return this;
  }

   /**
   * Position of last character of the thread&#39;s span in right file.
   * @return rightFileEnd
  **/
  @ApiModelProperty(value = "Position of last character of the thread's span in right file.")
  public CommentPosition getRightFileEnd() {
    return rightFileEnd;
  }

  public void setRightFileEnd(CommentPosition rightFileEnd) {
    this.rightFileEnd = rightFileEnd;
  }

  public CommentThreadContext rightFileStart(CommentPosition rightFileStart) {
    this.rightFileStart = rightFileStart;
    return this;
  }

   /**
   * Position of first character of the thread&#39;s span in right file.
   * @return rightFileStart
  **/
  @ApiModelProperty(value = "Position of first character of the thread's span in right file.")
  public CommentPosition getRightFileStart() {
    return rightFileStart;
  }

  public void setRightFileStart(CommentPosition rightFileStart) {
    this.rightFileStart = rightFileStart;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommentThreadContext commentThreadContext = (CommentThreadContext) o;
    return Objects.equals(this.filePath, commentThreadContext.filePath) &&
        Objects.equals(this.leftFileEnd, commentThreadContext.leftFileEnd) &&
        Objects.equals(this.leftFileStart, commentThreadContext.leftFileStart) &&
        Objects.equals(this.rightFileEnd, commentThreadContext.rightFileEnd) &&
        Objects.equals(this.rightFileStart, commentThreadContext.rightFileStart);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filePath, leftFileEnd, leftFileStart, rightFileEnd, rightFileStart);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommentThreadContext {\n");
    
    sb.append("    filePath: ").append(toIndentedString(filePath)).append("\n");
    sb.append("    leftFileEnd: ").append(toIndentedString(leftFileEnd)).append("\n");
    sb.append("    leftFileStart: ").append(toIndentedString(leftFileStart)).append("\n");
    sb.append("    rightFileEnd: ").append(toIndentedString(rightFileEnd)).append("\n");
    sb.append("    rightFileStart: ").append(toIndentedString(rightFileStart)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

